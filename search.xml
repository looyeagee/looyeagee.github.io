<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>我在往家里路由器上迁东西</title>
      <link href="zheteng/home/"/>
      <url>zheteng/home/</url>
      
        <content type="html"><![CDATA[<h1 id="说在前头"><a href="#说在前头" class="headerlink" title="说在前头"></a>说在前头</h1><p>上次文章还没写完呢，先鸽着。我已经决定不续费阿里云服务器了（费用和资源利用率问题）。但是少部分项目，如SnowBao雪宝，迁移到云函数上要改很多东西，我懒得动，所以还是要有一个简单的服务器。要不自己部署一个？<a id="more"></a></p><h1 id="开始折腾"><a href="#开始折腾" class="headerlink" title="开始折腾"></a>开始折腾</h1><p>回家了，得继续折腾！为此，我入手了一台入门软路由，配置如下：</p><table><thead><tr><th>硬件</th><th>型号</th></tr></thead><tbody><tr><td>主板</td><td>升腾NI945W-3</td></tr><tr><td>CPU</td><td>Intel(R) Atom(TM) CPU D2550 x86_64</td></tr><tr><td>内存</td><td>金士顿DDR3 2G</td></tr><tr><td>SSD</td><td>慧荣SM2244LTAB 8G</td></tr></tbody></table><p>配置好像不咋地？没关系，我部署的应用不怎么占内存和CPU的。卖家帮忙刷好了eSir编译的OpenWrt，由于我家联通宽带有公网IPv4地址，所以我就想说干脆搭一台宝塔服务器放家里算了。我部署的一些网站并不要求高可用，故家里短暂停电也没有太大关系。</p><p>我没有将其作为主路由使用，而是作为客户端使用，那么它的路由功能相当于废了！因为我不想引起现有路由配置的改变，懒得动。</p><h1 id="哪来的公网IPv4地址"><a href="#哪来的公网IPv4地址" class="headerlink" title="哪来的公网IPv4地址"></a>哪来的公网IPv4地址</h1><p>现在运营商一般拨号后给的是内网IP地址了，不像十几年前我家刚接入ADSL 12M铜线宽带每个人还有一个独立IP，甚至80端口还是开放的。现在买宽带的人越来越多，而我们国家被分配的IPv4地址才3亿多个，很少很少，所以运营商只能使用NAT技术来缓解公网IPv4地址紧缺的情况。但是！长沙联通可以在宽带账号后面加上<code>@changsha</code>，其他地区联通可以加上<code>@pppoe</code>拨号来获取公网IPv4地址，如果不行或者是其他运营商请致电客服获取公网IPv4地址。</p><h1 id="我家是光猫拨号咋整"><a href="#我家是光猫拨号咋整" class="headerlink" title="我家是光猫拨号咋整"></a>我家是光猫拨号咋整</h1><p>现在安装网络的时候，师傅帮你在光猫里面配置好了宽带账号密码啥的，而且光猫的<code>DMZ</code>功能好像是假的，所以我们需要用路由器来拨号。我们可以去网上搜索光猫的超级管理员账号密码，然后进Telnet后台把宽带账号密码查出来备份，最后在网页管理端把连接方式修改为桥接模式（Bridge ）即可。然后我们可以重置路由器，使用PPPoE拨号上网即可。</p><h1 id="IPv4地址变化怎么搞"><a href="#IPv4地址变化怎么搞" class="headerlink" title="IPv4地址变化怎么搞"></a>IPv4地址变化怎么搞</h1><p>我们家庭宽带不像企业专线一样有固定IP地址，我们的IP地址都是由运营商随机分配的，所以我们做域名解析的时候咋弄？最简单的就是路由器的DDNS功能了，像我家TP-LINK的路由器自己有DDNS，注册一个账号登录即可，会给你一个域名，然后把自己想要解析的子域名做<code>CNAME</code>到DDNS的域名即可。我总觉得这样不是很优雅，我的域名解析商是DNSPod，提供了API接口供修改解析。刚好Python里面有朋友封装了这些接口，模块名是：dns-dnspod，使用<code>pip3 install dns-dnspod</code>即可。所以我们可以使用这个来给域名做A记录。我们先去创建一个解析记录，然后通过API取得record_id，然后定时修改解析记录即可。</p><p>我用Python相关代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> pydnspod</span><br><span class="line">user_id = <span class="string">'&#123;YOUR_DNSPOD_ID&#125;'</span></span><br><span class="line">user_token = <span class="string">'&#123;YOUR_DNSPOD_KEY&#125;'</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    ip = requests.get(<span class="string">"https://ip.yinghualuo.cn/getip"</span>).text <span class="comment"># 取得公网IP地址，如果你是软路由拨号可以直接取系统的ip地址。</span></span><br><span class="line">    <span class="comment"># ip = json.loads(requests.get("http://pv.sohu.com/cityjson").text[19:-1])["cip"] 备用</span></span><br><span class="line">    dp = pydnspod.connect(user_id, user_token)</span><br><span class="line">    <span class="comment"># print(dp.record.record_id("&#123;主域名如baidu.com&#125;","主机记录如www")) 这个是来获取record_id的 获取后填在下面即可</span></span><br><span class="line">    print(json.dumps(dp.record.modify(<span class="string">"&#123;主域名如baidu.com&#125;"</span>,<span class="string">"&#123;上面获取到的record_id&#125;"</span>,<span class="string">"&#123;主机记录如www&#125;"</span>,<span class="string">"&#123;记录类型&#125;"</span>,ip)))</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>然后使用crontab创建定时任务，每几分钟运行一次即可。</p><h1 id="OpenWrt怎么安装宝塔"><a href="#OpenWrt怎么安装宝塔" class="headerlink" title="OpenWrt怎么安装宝塔"></a>OpenWrt怎么安装宝塔</h1><p>OpenWrt本身应该不能安装宝塔，但是这个固件有Docker呀，我们可以pull一个CentOS最新的镜像，然后执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd --privileged -e <span class="string">"container=docker"</span> -p 443:443 -p 8000-9000:8000-9000 --name=<span class="string">"centos"</span> --restart=always 300e315adb2f /usr/sbin/init</span><br></pre></td></tr></table></figure><p>就创建了一个新的容器，并暴露了一些端口。为啥不暴露80，是因为家庭宽带的80端口被封啦。然后再在容器里面执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh</span><br></pre></td></tr></table></figure><p>等一会儿就OK啦，记得把默认的8888端口地址改改。</p><h1 id="怎么守护Python后端服务"><a href="#怎么守护Python后端服务" class="headerlink" title="怎么守护Python后端服务"></a>怎么守护Python后端服务</h1><p>宝塔安装Supervisor进程管理器，添加守护进程即可。用到Python虚拟环境的可以写上虚拟环境里Python的完整路径来执行程序。</p><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>用了几天感觉这个小主板还是挺不错的，不卡也稳定。百来块钱，体验到了非一般的感觉~</p><p>目前SnowBao雪宝已经完全迁移到了软路由上了，希望大家用的开心。</p>]]></content>
      
      
      <categories>
          
          <category> 折腾 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务器 </tag>
            
            <tag> CentOS </tag>
            
            <tag> OpenWrt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我在用云函数和Serverless</title>
      <link href="zheteng/tcb/"/>
      <url>zheteng/tcb/</url>
      
        <content type="html"><![CDATA[<h1 id="什么是云函数？"><a href="#什么是云函数？" class="headerlink" title="什么是云函数？"></a>什么是云函数？</h1><p>云函数，就是部署在云上的函数。我们只需要关注业务代码，无需自行安装环境部署，写一段代码，设置一个触发器（可以是HTTP访问来触发）来达到运行的目的，云函数是没有状态的，就是不会像普通的服务器一样一直监听着一个端口，云函数不被触发就不占用任何资源（当然，存储代码的空间还是要用的，当然这个好像不收钱）。<a id="more"></a></p><h1 id="为什么要云函数"><a href="#为什么要云函数" class="headerlink" title="为什么要云函数"></a>为什么要云函数</h1><p><strong>当然是成本咯。</strong></p><p>在迁移我的所有项目到云函数/Serverless之前，阿里云服务器是我部署项目的地方。拿一个2核4G的20%CPU算力的阿里云云服务器来说，买5年需要2000元多一点（为啥买5年，买5年打折多，套路深），合1天1元左右。作为个人学生开发者来说，压力还是有点大的，有人问了，为啥买20%算力？其实我统计了我的服务器近一年的CPU使用情况，绝大多数时间CPU使用率都是20%以下，因为我部署的都是一些Web项目， 体积小、访问人数少、资源使用少，20%的算力甚至盈余不少。所以我认为，对于我个人来说，买服务器不是首选。那么云函数成本何如？腾讯云和阿里云都有云函数（函数计算）和Serverless，对比下来，最终选择了腾讯云。腾讯云的云开发CloudBase天然集成了数据库、存储功能、云函数和静态网站托管，在云函数使用数据库和存储时不需要额外认证；阿里云相对来说是隔开的。再来比较免费额度，腾讯云云存储每月免费5GB存储、2GB非关系型数据库、4万GBs云函数资源使用量、云函数1G公网流量、静态托管1G存储空间，CDN有5G公网流量；阿里云云函数提供100万调用次数、40万GBs云函数资源使用量，其他的似乎没有免费提供了。所以对于个人学生开发者来说，如果腾讯云开发免费额度一直存在，按照我现在网站的访问量来说，那岂不是永久免费？！即使超出了免费额度，收费也不贵，具体可以参考<a href="https://cloud.tencent.com/document/product/876/39095#.E6.8C.89.E9.87.8F.E8.AE.A1.E8.B4.B9" target="_blank" rel="noopener">腾讯云云开发计费文档</a>。</p><p>综上所述，我开始了腾讯云函数开发和Serverless之旅。</p><p>未完待续…</p>]]></content>
      
      
      <categories>
          
          <category> 折腾 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 云开发 </tag>
            
            <tag> 服务器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Manjaro KDE 安装微信、QQ记录</title>
      <link href="notes/manjaro/"/>
      <url>notes/manjaro/</url>
      
        <content type="html"><![CDATA[<h3 id="微信的安装"><a href="#微信的安装" class="headerlink" title="微信的安装"></a>微信的安装</h3><p>在包管理器-首选项-启用<code>AUR</code>支持，安装<code>com.qq.weixin.deepin</code>，之后遇到了无法打开输入法的问题，转到<code>/opt/apps/com.qq.weixin.deepin/files/</code>后，编辑<code>run.sh</code>，在除注释外的首行追加以下内容即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">env locale=zh_CN</span><br><span class="line"><span class="built_in">export</span> XMODIFIERS=<span class="string">"@im=fcitx"</span></span><br></pre></td></tr></table></figure><p>可能还会遇到输入显示成框框的问题，参考这个链接<a href="https://blog.csdn.net/lgsteven88/article/details/90724501" target="_blank" rel="noopener">https://blog.csdn.net/lgsteven88/article/details/90724501</a> 安装中文字体即可。</p><h3 id="QQ的安装"><a href="#QQ的安装" class="headerlink" title="QQ的安装"></a>QQ的安装</h3><p>安装<code>com.qq.im.deepin</code>，之后会遇到卡在登录界面的问题，参考<a href="https://aur.archlinux.org/packages/com.qq.im.deepin#comment-775513" target="_blank" rel="noopener">https://aur.archlinux.org/packages/com.qq.im.deepin#comment-775513</a> 解决：</p><blockquote><p>如果 Linux 里装了 Win 的宋体，QQ 就会卡死，此时 QQ 会使用宋体里的点阵字体。</p><p>此时解决方案是把 Win 的宋体的 ttc 文件往 QQ 的 Wine 容器里也装一份（即复制到 <code>~/.deepinwine/Deepin-QQ/drive_c/windows/Fonts/</code>里，此时 QQ 不再使用宋体里的点阵字体，也不会卡死了。</p></blockquote><p>输入法问题同样参考微信输入法解决方案。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Manjaro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用自己的服务器搭个内网穿透服务</title>
      <link href="zheteng/frp/"/>
      <url>zheteng/frp/</url>
      
        <content type="html"><![CDATA[<h3 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h3><p>疫情在家的合作开发属实不方便，不在同一局域网下，前后端交互变得异常困难。由于公网IPv4地址的稀缺，现在三大运营商分配给我们拨号后的IP地址都是内网的了（我家是长沙联通，在宽带账号名后面加上@changsha能获取到公网IP，其他用户可以咨询自己的运营商看看能不能整个公网IP）。那么我们可以不可以利用自己的服务器作为中间商，A想连接B的端口，B主动连接到服务器建立好隧道，然后A连接服务器后通过隧道连接到B呢，答案是可以的。现在流行的内网穿透软件有<code>Ngrok</code>和<code>frp</code>，前者低版本是开源的，新版是闭源的；后者是国人的作品非常之好用，部署也很简单。那有同学问了，为啥不用向日葵啥的组建局域网呢，一个是收费，二个是如果我想穿透一个Web服务，向日葵是做不到的。再说了，有自己的服务器不好好利用不是浪费🐴。<a id="more"></a></p><h3 id="二、frps的部署"><a href="#二、frps的部署" class="headerlink" title="二、frps的部署"></a>二、frps的部署</h3><p>先去它的 <a href="https://github.com/fatedier/frp/" target="_blank" rel="noopener">GitHub</a>上根据自己的系统架构下载最新的版本，然后解压。编辑<code>frps.ini</code>如下配置</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">[common]</span></span><br><span class="line"><span class="attr">bind_port</span> = <span class="string">7000</span></span><br><span class="line"><span class="attr">vhost_http_port</span> = <span class="string">6088</span></span><br><span class="line"><span class="attr">authentication_method</span> = <span class="string">token</span></span><br><span class="line"><span class="attr">token</span> = <span class="string">your_token_here</span></span><br></pre></td></tr></table></figure><p>第一个端口是主要的端口，就是我们的<code>frpc</code>客户端通过这个端口连接到服务端的。第二个端口是HTTP服务的端口，专门用来映射客户端的HTTP服务。这些端口都可以自己随意设定。</p><p>配置好之后执行<code>frps -c frps.ini</code>即可运行frps服务器了。</p><h3 id="三、客户端的连接"><a href="#三、客户端的连接" class="headerlink" title="三、客户端的连接"></a>三、客户端的连接</h3><p>客户端<code>frpc.ini</code>如下配置：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">[ssh]</span></span><br><span class="line"><span class="attr">type</span> = <span class="string">tcp</span></span><br><span class="line"><span class="attr">local_ip</span> = <span class="string">127.0.0.1</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="string">22</span></span><br><span class="line"><span class="attr">remote_port</span> = <span class="string">6100</span></span><br><span class="line"></span><br><span class="line"><span class="attr">[web]</span></span><br><span class="line"><span class="attr">type</span> = <span class="string">http</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="string">8080</span></span><br><span class="line"><span class="attr">custom_domains</span> = <span class="string">web.frp.looyeagee.cn</span></span><br><span class="line"></span><br><span class="line"><span class="attr">[common]</span></span><br><span class="line"><span class="attr">server_addr</span> = <span class="string">looyeagee.cn</span></span><br><span class="line"><span class="attr">server_port</span> = <span class="string">7000</span></span><br><span class="line"><span class="attr">token</span> = <span class="string">your_token_here</span></span><br></pre></td></tr></table></figure><p>然后执行<code>frpc -c frpc.ini</code>就可以运行frpc客户端了。做好解析后就可以让别人访问<code>web.frp.looyeagee.cn:6088</code>来访问本机8080端口的Web服务了；也可以通过6100端口访问到本机的<code>SSH</code>服务了。</p><h3 id="四、其他设置"><a href="#四、其他设置" class="headerlink" title="四、其他设置"></a>四、其他设置</h3><p>这样还是没有很方便，因为每次还要配置域名的解析。所以我们可以做一个泛解析A记录。主机记录写上<code>*.frp</code>即可。这样就很方便啦，现在还有一个安全的问题，目前提供的是HTTP服务，虽然说<code>frp</code>提供了<code>HTTPS</code>服务，但是我使用了宝塔面板配置了其他网站，443端口被占用了。每次加上端口号访问真的不爽，所以我是这样做的：在宝塔新建一个网站，加上<code>*.frp.looyeagee.cn</code>这个通配域名，然后设置反向代理到<code>127.0.0.1:6088</code>即可，再开启强制<code>HTTPS</code>。这样我们访问HTTP就会自动重定向到HTTPS啦。</p><p><img data-src="https://cdn.looyeagee.cn/blog/img/2020/08/frp_baota.png-blog" alt="图1:宝塔配置截图"></p>]]></content>
      
      
      <categories>
          
          <category> 折腾 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> frp </tag>
            
            <tag> 内网穿透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>好软推荐:UTermux</title>
      <link href="zheteng/UTermux/"/>
      <url>zheteng/UTermux/</url>
      
        <content type="html"><![CDATA[<h3 id="一、UTermux介绍"><a href="#一、UTermux介绍" class="headerlink" title="一、UTermux介绍"></a>一、UTermux介绍</h3><p>喜欢折腾的朋友都应该玩过一款叫做<code>Termux</code>的软件，它可以让你的安卓手机变成<code>Linux</code>系统，运行你喜欢的软件。你可以在上面安装PHP，Python3，MySQL，Nginx，Node等等软件。现在我找到了一个基于这个开发的<code>UTermux</code>，它保留了<code>Termux</code>的所有功能特性，此外它的附加功能也非常多。<a id="more"></a>先来个截图吧。</p><p><img data-src="https://cdn.looyeagee.cn/blog/img/2020/08/UTermux.jpg-blog" alt="图1:UTermux截图"></p><p>安装之后，你甚至可以用它装个Manjaro，Ubuntu等操作系统(只不过有点卡咯)来装逼。这里面比较好用的是一个启动会话时自动运行脚本的功能和读取短信的功能。</p><h3 id="二、短信读取功能"><a href="#二、短信读取功能" class="headerlink" title="二、短信读取功能"></a>二、短信读取功能</h3><p>启用读取短信功能并赋予相关安卓权限后，输入<code>XINHAO_HAN_Sms</code>命令即可获取短信。因为我的老手机号码用了6年多注册了非常多的网站，现在每天有很多条垃圾短信和垃圾电话，所以我把SIM卡上到了废旧手机上，但是万一有什么紧急的验证码，我就可以用自己的手机通过<code>SSH</code>连接到<code>Termux</code>后读取短信了~</p><p><img data-src="https://cdn.looyeagee.cn/blog/img/2020/08/sms.png-blog" alt="图2:获取短信截图"></p><h3 id="三、启动会话自动运行脚本"><a href="#三、启动会话自动运行脚本" class="headerlink" title="三、启动会话自动运行脚本"></a>三、启动会话自动运行脚本</h3><p>由于我不会时时刻刻带着废旧手机，所以我得启动一个内网穿透的服务以使我自己的手机可以通过<code>SSH</code>连接到废旧手机，每次要手动启动<code>SSH</code>和内网穿透服务的话太麻烦，<code>UTermux</code>自动启动脚本，非常好用。不过他是每启动一个会话就运行一次而不是开机启动，所以我要先判断一下是否运行了内网穿透服务(frp)，没运行就运行，运行了就不运行。</p><p><img data-src="https://cdn.looyeagee.cn/blog/img/2020/08/auto.png-blog" alt="图3:自动运行脚本截图"></p>]]></content>
      
      
      <categories>
          
          <category> 折腾 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Termux </tag>
            
            <tag> 安卓 </tag>
            
            <tag> 废物利用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>acme.sh自动申请多域名、泛域名、组合域名SSL证书</title>
      <link href="zheteng/acme/"/>
      <url>zheteng/acme/</url>
      
        <content type="html"><![CDATA[<h2 id="一、acme-sh的安装和使用"><a href="#一、acme-sh的安装和使用" class="headerlink" title="一、acme.sh的安装和使用"></a>一、acme.sh的安装和使用</h2><p>看到我的SSL证书了吗，看看它的<code>使用者可选名称</code>或者叫做<code>证书主题背景的备用名称</code>，是不是有一大堆？且有2个不同的主域名：<code>looyeagee.cn</code> 和 <code>csust-iotlab.com</code><br><img data-src="https://cdn.looyeagee.cn/blog/img/2020/05/cer_windows.png-blog" alt="图1:Windows下的证书解图"></p><a id="more"></a>对于一个多站点，甚至管理了不同二级域名的我来说：Https证书问题是一大困扰问题。如今免费的DV证书提供商大约有三家：<ul><li><p>1、Let’s Encrypt ：3个月有效期，支持多域名、泛域名、不同域名签发到一张证书上，最多签发100个域名。</p></li><li><p>2、TrustAsia：1年有效期，单域名（签发根域名会赠送一个www的子域名）</p></li><li><p>3、DigiCert Inc提供的Encryption Everywhere DV TLS CA - G1：1年有效期，单域名（签发根域名会赠送一个www的子域名）</p></li></ul><p>其中TrustAsia的兼容性应该是最好的，只不过它同一域名下只能签发20张，有数量限制，且不能签发泛域名。所以我打算选择Let’s Encrypt，虽然它的证书只有3个月，但是使用acme.sh能自动签发证书而且能够自动续签，十分方便。</p><p>使用如下命令安装<code>acme.sh</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl https://get.acme.sh | sh</span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure><p>然后使用acme.sh命令即可使用它</p><h2 id="二、使用DNSPOD密钥"><a href="#二、使用DNSPOD密钥" class="headerlink" title="二、使用DNSPOD密钥"></a>二、使用DNSPOD密钥</h2><p>我的域名是在腾讯云上买的，所以DNS服务商是DNSPOD，如果你的不是DNSPOD提供服务，acme.sh还支持如下：CloudFlare、Aliyun、等等110余个提供商。你可以<a href="https://github.com/acmesh-official/acme.sh/wiki/dnsapi" target="_blank" rel="noopener">点击这儿</a>查看列表。只不过，就算你是在其他地方买的，也可以将域名交给DNSPOD解析。</p><p>值得注意的是，如果你有多个域名都想把它签发到一张证书上，你需要确保你的DNSPOD帐号都管理了这些域名，而不是说只要是由DNSPOD提供服务而已。</p><p>登录DNSPOD后，来到<a href="https://console.dnspod.cn/account/token" target="_blank" rel="noopener">密钥管理</a>界面，点击创建密钥，名称随缘。</p><p><img data-src="https://cdn.looyeagee.cn/blog/img/2020/05/create_key.png-blog" alt="图2:创建密钥"></p><p>点击确定后会弹出</p><p><img data-src="https://cdn.looyeagee.cn/blog/img/2020/05/dnspod_key.png-blog" alt="图3:密钥结果"></p><p>注意保存好ID和Token到本地，信息只会展示一次。</p><h2 id="三、申请证书"><a href="#三、申请证书" class="headerlink" title="三、申请证书"></a>三、申请证书</h2><p>在终端执行</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> DP_Id=<span class="string">"你的ID"</span></span><br><span class="line"><span class="built_in">export</span> DP_Key=<span class="string">"你的Token"</span></span><br></pre></td></tr></table></figure><p>然后我们即将进行签发证书，<strong>不过在此之前请注意，如果你的要申请的域名含有CNAME的解析记录，则最好将它暂停解析或者暂时用A记录代替。否则证书不能申请成功，当时我就有一个子域名做了CNAME记录，怎么也验证通过不了，网上提供的解决方法大多是错的。</strong></p><p>然后执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acme.sh --issue -d *.looyeagee.cn -d looyeagee.cn -d *.home.looyeagee.cn -d *.frp.looyeagee.cn  -d *.csust-iotlab.com -d csust-iotlab.com -d *.frp.csust-iotlab.com -d *.blog.csust-iotlab.com --dns dns_dp</span><br></pre></td></tr></table></figure><p>其中第一个<code>-d</code>会作为证书的<code>公用名 (CN)</code>，你想申请几个就用几个<code>-d</code>即可。<code>--dns dns_dp</code>是指定DNSPOD服务商。若你的不是，你可以按照刚刚的DNS服务商列表查看参数。</p><p>这样，多域名、泛域名、不同域名合为一体的证书就签发完毕了。</p>]]></content>
      
      
      <categories>
          
          <category> 折腾 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> acme.sh </tag>
            
            <tag> SSL证书 </tag>
            
            <tag> Https </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用GoAccess日志分析工具为Hexo统计访问量</title>
      <link href="zheteng/goaccess/"/>
      <url>zheteng/goaccess/</url>
      
        <content type="html"><![CDATA[<h2 id="一、GoAccess的安装和使用"><a href="#一、GoAccess的安装和使用" class="headerlink" title="一、GoAccess的安装和使用"></a>一、GoAccess的安装和使用</h2><p>由于Hexo是静态的，无法动态为其统计文章访问量，第三方服务我又害怕不稳定。于是我想到了Nginx的日志。日志是个好东西，记录了网站的所有请求和返回状态等等。所以我就找到了名为<code>GoAccess</code>的日志分析工具，它支持多种日志格式。<a id="more"></a></p><p>安装<code>GoAccess</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install goaccess</span><br></pre></td></tr></table></figure><p>在你喜欢的目录创建如下日志格式配置，文件名如<code>nginxlog.conf</code>，由于我用了宝塔面板，其<code>Nginx</code>设置的日志格式转成<code>GoAccess</code>如下。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">time-format %T</span><br><span class="line">date-format %d&#x2F;%b&#x2F;%Y</span><br><span class="line">log_format %h - %^ [%d:%t %^] &quot;%r&quot; %s %b &quot;%R&quot; &quot;%u&quot;</span><br></pre></td></tr></table></figure><p>如果你是使用的原生的<code>Nginx</code>，日志可能有所不同。请<a href="https://github.com/stockrt/nginx2goaccess" target="_blank" rel="noopener">下载脚本</a>把Nginx格式的日志转换成<code>GoAccess</code>适配的日志。然后执行如下语句</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LANG=<span class="string">"zh_CN.UTF-8"</span> bash -c <span class="string">"goaccess -f /www/wwwlogs/looyeagee.cn.log -p ~/nginxlog.conf -o /www/wwwroot/looyeagee.cn/report.html --ignore-status=404"</span></span><br></pre></td></tr></table></figure><p>其中<code>-f</code>是指定日志文件位置，<code>-p</code>是指定刚刚的日志格式配置文件位置，<code>-o</code>是指定输出位置，<code>--ignore-status=404</code>是忽略404结果，因为404大多是机器人访问的或者攻击者访问的失败请求，不应该将其计入最终访问量。</p><p>这样，我们访问这个网页，就可以得到如下所示界面：</p><p><img data-src="https://cdn.looyeagee.cn/blog/img/2020/05/looyeagee.cn_report.html.png-blog" alt="图1:报告截图"></p><p>统计还是挺全面的，但是这似乎并不合适我们用<code>JavaScript</code>来读取访问量，查看官网文档，发现还有一种输出格式，也就是<code>Json</code>格式。将上面的生成报告命令改成：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LANG=<span class="string">"zh_CN.UTF-8"</span> bash -c <span class="string">"goaccess -f /www/wwwlogs/looyeagee.cn.log -p ~/nginxlog.conf -o /www/wwwroot/looyeagee.cn/report.json --ignore-status=404"</span></span><br></pre></td></tr></table></figure><p>即可生成json报告，其中概况信息的字段是<code>general</code>，内容如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"general"</span>: &#123;</span><br><span class="line">        <span class="attr">"start_date"</span>: <span class="string">"28/4月/2020"</span>,</span><br><span class="line">        <span class="attr">"end_date"</span>: <span class="string">"22/5月/2020"</span>,</span><br><span class="line">        <span class="attr">"date_time"</span>: <span class="string">"2020-05-22 16:15:41 +0800"</span>,</span><br><span class="line">        <span class="attr">"total_requests"</span>: <span class="number">11509</span>,</span><br><span class="line">        <span class="attr">"valid_requests"</span>: <span class="number">5170</span>,</span><br><span class="line">        <span class="attr">"failed_requests"</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">"generation_time"</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">"unique_visitors"</span>: <span class="number">1445</span>,</span><br><span class="line">        <span class="attr">"unique_files"</span>: <span class="number">1040</span>,</span><br><span class="line">        <span class="attr">"excluded_hits"</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">"unique_referrers"</span>: <span class="number">102</span>,</span><br><span class="line">        <span class="attr">"unique_not_found"</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">"unique_static_files"</span>: <span class="number">147</span>,</span><br><span class="line">        <span class="attr">"log_size"</span>: <span class="number">2456680</span>,</span><br><span class="line">        <span class="attr">"bandwidth"</span>: <span class="number">61019738</span>,</span><br><span class="line">        <span class="attr">"log_path"</span>: [</span><br><span class="line">          <span class="string">"/www/wwwlogs/looyeagee.cn.log"</span></span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们只需要<code>valid_requests</code>访问量，和<code>unique_visitors</code>访客量两个数据。</p><h2 id="二、将访问量写入网页"><a href="#二、将访问量写入网页" class="headerlink" title="二、将访问量写入网页"></a>二、将访问量写入网页</h2><p>在<code>Html</code>页面中，我们可以预留两个<code>span</code>标签来展示数据。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">访客人数：<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"uv"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>|<span class="symbol">&amp;nbsp;</span>访问总量：<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"pv"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p>我们可以用<code>JS</code>这样来取出</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$.getJSON(<span class="string">"https://looyeagee.cn/report.json"</span>),<span class="function"><span class="keyword">function</span>(<span class="params">result</span>) </span>&#123;</span><br><span class="line">$(<span class="string">"#uv"</span>).html(result[<span class="string">"general"</span>][<span class="string">"unique_visitors"</span>]);</span><br><span class="line">$(<span class="string">"#pv"</span>).html(result[<span class="string">"general"</span>][<span class="string">"valid_requests"</span>]);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>这样我们的访问量就可以正常显示了。</p><h2 id="三、给每篇文章显示访问量"><a href="#三、给每篇文章显示访问量" class="headerlink" title="三、给每篇文章显示访问量"></a>三、给每篇文章显示访问量</h2><p>虽然我们统计了访问总量和访客人数，但是每篇文章的访问数我们还没有解决，这时我查看了下它的<code>Json</code>，里面有个<code>requests</code>字段，里面的<code>data</code>字段记录了所有请求路径以及路径的访问量和访客数。随便拿出一个data来看一下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"hits"</span>: &#123;</span><br><span class="line">        <span class="attr">"count"</span>: <span class="number">1162</span>,</span><br><span class="line">        <span class="attr">"percent"</span>: <span class="string">"22.48"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"visitors"</span>: &#123;</span><br><span class="line">        <span class="attr">"count"</span>: <span class="number">636</span>,</span><br><span class="line">        <span class="attr">"percent"</span>: <span class="string">"44.01"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"bytes"</span>: &#123;</span><br><span class="line">        <span class="attr">"count"</span>: <span class="number">1865825</span>,</span><br><span class="line">        <span class="attr">"percent"</span>: <span class="string">"3.06"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"method"</span>: <span class="string">"GET"</span>,</span><br><span class="line">    <span class="attr">"protocol"</span>: <span class="string">"HTTP/1.1"</span>,</span><br><span class="line">    <span class="attr">"data"</span>: <span class="string">"/"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>hits</code>就是访问量，<code>visitors</code>就是访客量，<code>data</code>就是访问路径。不过我发现，<code>data</code>可能有重复的路径，这是因为每次的<code>method</code>和<code>protocol</code>不同，这些数据都会被细分。所以我们要做的是把这些路径的<code>hits</code>和<code>visitors</code>都加起来。用<code>python</code>写个脚本吧，只保留我们需要的数据，顺便每次运行脚本时都更新一下<code>json</code>文件。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">os.system(</span><br><span class="line">    <span class="string">'LANG="zh_CN.UTF-8" bash -c "goaccess -f /www/wwwlogs/looyeagee.cn.log -p ~/nginxlog.conf -o /www/wwwroot/looyeagee.cn/report.json --ignore-status=404"'</span>)</span><br><span class="line">root = <span class="string">"/www/wwwroot/looyeagee.cn/"</span></span><br><span class="line"><span class="keyword">with</span> open(root + <span class="string">"sitemap.xml"</span>) <span class="keyword">as</span> f:  <span class="comment"># 读取sitemap以过滤其他非法或者不存在的请求</span></span><br><span class="line">    sitemap = f.read().replace(<span class="string">".html"</span>, <span class="string">""</span>).replace(<span class="string">"https://looyeagee.cn"</span>, <span class="string">""</span>)  <span class="comment"># 替换掉不必要信息</span></span><br><span class="line"><span class="keyword">with</span> open(root + <span class="string">"report.json"</span>) <span class="keyword">as</span> f:</span><br><span class="line">    data = json.load(f)</span><br><span class="line">    result = &#123;  <span class="comment"># 取得基本信息</span></span><br><span class="line">        <span class="string">"general"</span>: &#123;</span><br><span class="line">            <span class="string">"valid_requests"</span>: data[<span class="string">"general"</span>][<span class="string">"valid_requests"</span>],</span><br><span class="line">            <span class="string">"unique_visitors"</span>: data[<span class="string">"general"</span>][<span class="string">"unique_visitors"</span>],</span><br><span class="line">            <span class="string">"date_time"</span>: data[<span class="string">"general"</span>][<span class="string">"date_time"</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">request_result = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> data[<span class="string">"requests"</span>][<span class="string">"data"</span>]:</span><br><span class="line">    <span class="keyword">if</span> sitemap.find(i[<span class="string">"data"</span>]) == <span class="number">-1</span> <span class="keyword">or</span> i[<span class="string">"data"</span>] == <span class="string">""</span> \</span><br><span class="line">            <span class="keyword">or</span> i[<span class="string">"data"</span>][<span class="number">-1</span>] != <span class="string">"/"</span>:  <span class="comment"># 在sitemap找不到或者为空或者最后不以/结尾(不以/结尾会跳转到以/结尾的所以不计入)就跳过</span></span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> request_result.get(i[<span class="string">"data"</span>]) <span class="keyword">is</span> <span class="literal">None</span>:  <span class="comment"># data在结果里是空说明是第一次 所以先初始化一下</span></span><br><span class="line">        request_result[i[<span class="string">"data"</span>]] = &#123;</span><br><span class="line">            <span class="string">"hits"</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="string">"visitors"</span>: <span class="number">0</span></span><br><span class="line">        &#125;</span><br><span class="line">    request_result[i[<span class="string">"data"</span>]][<span class="string">"hits"</span>] += i[<span class="string">"hits"</span>][<span class="string">"count"</span>]</span><br><span class="line">    request_result[i[<span class="string">"data"</span>]][<span class="string">"visitors"</span>] += i[<span class="string">"visitors"</span>][<span class="string">"count"</span>]</span><br><span class="line">result[<span class="string">"req"</span>] = request_result</span><br><span class="line"><span class="keyword">with</span> open(root + <span class="string">"report.json"</span>, <span class="string">"w"</span>) <span class="keyword">as</span> f:</span><br><span class="line">    json.dump(result, f)</span><br></pre></td></tr></table></figure><p>这样我们就得到了类似这样的<code>Json</code>文件：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"general"</span>: &#123;</span><br><span class="line">    <span class="attr">"valid_requests"</span>: <span class="number">5151</span>,</span><br><span class="line">    <span class="attr">"unique_visitors"</span>: <span class="number">1445</span>,</span><br><span class="line">    <span class="attr">"date_time"</span>: <span class="string">"2020-05-22 16:00:01 +0800"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"req"</span>: &#123;</span><br><span class="line">    <span class="attr">"/"</span>: &#123;</span><br><span class="line">      <span class="attr">"hits"</span>: <span class="number">1667</span>,</span><br><span class="line">      <span class="attr">"visitors"</span>: <span class="number">946</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"/archives/"</span>: &#123;</span><br><span class="line">      <span class="attr">"hits"</span>: <span class="number">213</span>,</span><br><span class="line">      <span class="attr">"visitors"</span>: <span class="number">115</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在文章的<code>Html</code>里预留<code>id</code>为<code>article_pv</code>的<code>span</code>标签，在js中写一下即可：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$.getJSON(<span class="string">"https://looyeagee.cn/report.json?t="</span> + dateFormat(<span class="string">"YYYYmmddHH"</span>, <span class="keyword">new</span> <span class="built_in">Date</span>()),</span><br><span class="line"><span class="function"><span class="keyword">function</span>(<span class="params">result</span>) </span>&#123;</span><br><span class="line">$(<span class="string">"#uv"</span>).html(result[<span class="string">"general"</span>][<span class="string">"unique_visitors"</span>]);</span><br><span class="line">$(<span class="string">"#pv"</span>).html(result[<span class="string">"general"</span>][<span class="string">"valid_requests"</span>]);</span><br><span class="line"><span class="keyword">var</span> path_name = <span class="built_in">decodeURI</span>(<span class="built_in">window</span>.location.pathname);</span><br><span class="line">$(<span class="string">"#article_pv"</span>).html(result[<span class="string">"req"</span>][path_name][<span class="string">"hits"</span>]);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>以上的dateFormat函数来自<a href="https://www.jianshu.com/p/49fb78bca621" target="_blank" rel="noopener">这儿</a>，生成一个精确到小时的时间字符串以确保获取到的是最新生成的数据（怕缓存问题）。那么怎么一小时执行一次呢？去宝塔面板添加如下计划任务即可（文件路径为自己的python脚本路径），不是宝塔用户自己可以用<code>crontab -e</code>添加计划任务噢～<br><img data-src="https://cdn.looyeagee.cn/blog/img/2020/05/python3-nginx-log.png-blog" alt="图2:计划任务截图"></p><p>这样，我们就完成了每小时自动更新了！且读取到的数据不会被缓存所影响。</p>]]></content>
      
      
      <categories>
          
          <category> 折腾 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GoAccess </tag>
            
            <tag> 日志 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Web]更新!雪宝网页版发布啦!</title>
      <link href="software/snowbao/"/>
      <url>software/snowbao/</url>
      
        <content type="html"><![CDATA[<h3 id="一、应用截图"><a href="#一、应用截图" class="headerlink" title="一、应用截图"></a>一、应用截图</h3><p>雪宝网页版地址：<a href="https://snowbao.looyeagee.cn/" target="_blank" rel="noopener">https://snowbao.looyeagee.cn/</a></p><p><img data-src="https://cdn.looyeagee.cn/blog/img/2020/04/snowbao.looyeagee.cn_.png-blog" alt="图1:截图"></p><a id="more"></a><h3 id="二、特性："><a href="#二、特性：" class="headerlink" title="二、特性："></a>二、特性：</h3><h4 id="1-跨平台"><a href="#1-跨平台" class="headerlink" title="1.跨平台"></a>1.跨平台</h4><p>支持所有主流浏览器(推荐Chrome 80+)。妈妈再也不用为我在Linux下无法交作业而苦恼了。</p><h4 id="2-虚拟机外提交"><a href="#2-虚拟机外提交" class="headerlink" title="2.虚拟机外提交"></a>2.虚拟机外提交</h4><p>你是不是抱怨这些？学宝虚拟机写作业卡的要死，软件版本低，不方便编程……而雪宝会自动判断该作业是要在虚拟机内交还是在外部就可以交，然后模拟对应的交作业行为，虚拟机和作业宝都用不着啦~</p><h4 id="3-资源文件自动转Pdf"><a href="#3-资源文件自动转Pdf" class="headerlink" title="3.资源文件自动转Pdf"></a>3.资源文件自动转Pdf</h4><p>是不是有些资料文件只能预览不能下载？雪宝可以自动搜索到该资源下的pdf文件（极少加密部分资源不可以），方便您的查阅和使用。</p><h4 id="4-极大程度减少用户使用难度"><a href="#4-极大程度减少用户使用难度" class="headerlink" title="4.极大程度减少用户使用难度"></a>4.极大程度减少用户使用难度</h4><p>平常就交个作业是不是得进行复杂操作，窗口切换来切换去，且速度慢得死？现在不必了！本程序选择课程后只有一个树型框，依次展开结点即可进行操作。</p><h4 id="5-仔细打磨细节"><a href="#5-仔细打磨细节" class="headerlink" title="5.仔细打磨细节"></a>5.仔细打磨细节</h4><p>已到截止时间的作业会显示成红色等等</p><h4 id="6-更多彩蛋功能"><a href="#6-更多彩蛋功能" class="headerlink" title="6.更多彩蛋功能"></a>6.更多彩蛋功能</h4><p>不一一细说，请自行体验。</p><h3 id="三、说明"><a href="#三、说明" class="headerlink" title="三、说明"></a>三、说明</h3><p>本程序是捐赠软件，完全免费，禁止付费卖给他人。如果觉得好用可以捐赠，<strong>有问题或建议可以在本页下方留言</strong>。</p><p>为何放弃老版本：老版本的雪宝桌面客户端采用Python3加QT5进行开发，兼容性不是很好，操作也不流畅。半年没动有些BUG，实在是不想改了，便重构网页版。</p><h3 id="四、捐赠名单（排名不分先后）"><a href="#四、捐赠名单（排名不分先后）" class="headerlink" title="四、捐赠名单（排名不分先后）"></a>四、捐赠名单（排名不分先后）</h3><table><thead><tr><th>昵称</th><th>金额</th></tr></thead><tbody><tr><td>某毅</td><td>5</td></tr><tr><td>hsq</td><td>7</td></tr><tr><td>pah</td><td>10</td></tr><tr><td>pwh</td><td>5</td></tr><tr><td>匿名[合计]</td><td>1</td></tr><tr><td><img data-src="https://cdn.looyeagee.cn/blog/img/2020/04/wechat.png" style="width:200px" alt="图2:微信捐赠"></td><td><img data-src="https://cdn.looyeagee.cn/blog/img/2020/04/alipay.png" style="width:200px" alt="图3:支付宝捐赠"></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 原创软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学宝 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的CTF院赛出题记录</title>
      <link href="zheteng/ctf/"/>
      <url>zheteng/ctf/</url>
      
        <content type="html"><![CDATA[<h2 id="视频讲解"><a href="#视频讲解" class="headerlink" title="视频讲解"></a>视频讲解</h2><p>点<a href="https://pan.baidu.com/s/1vNuQqGLR1ecSxxp2qCMVhQ" target="_blank" rel="noopener">这里</a>下载视频讲解。提取码: 2333</p><h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>最近，即将举行网鼎杯，由于我们学校以前都没对安全方面的比赛进行重视，所以几乎没人玩CTF。现在老师们也打算筹建这么一支安全竞赛方面的队伍，所以搞个院赛看看人群中是否有大神存在。作为刚入门CTF的小萌新，我主动请缨搭建院赛做题环境（原因是对这个挺感兴趣，只不过非常菜。当然，我只是对这方面当作业余爱好玩玩题目涨涨见识，真想往这方面转已经来不及了）<a id="more"></a></p><p><del>PS：还是乖乖去做增删改查吧</del></p><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>采用开源的<a href="https://github.com/CTFd/CTFd" target="_blank" rel="noopener">CTFd</a>作为平台，按照官方文档安装后，对导航栏汉化了一部分。CTFd的功能还是挺多的，各种数据，图表都支持的非常好。</p><h2 id="出题构思"><a href="#出题构思" class="headerlink" title="出题构思"></a>出题构思</h2><p>出题都出的非常简单（其实是因为自己水平不行，出不出太难的😅）</p><h3 id="签到题"><a href="#签到题" class="headerlink" title="签到题"></a>签到题</h3><p>一个摩斯密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.. .-.. --- ...- . -.-. ... ..- ... -</span><br></pre></td></tr></table></figure><h3 id="厂里人都应该知道的"><a href="#厂里人都应该知道的" class="headerlink" title="厂里人都应该知道的"></a>厂里人都应该知道的</h3><p>出题思路：降低了难度，flag没加密。找flag只要往IDA一扔。</p><p>源码（忽略变量命名不规范）：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"if you are CSUSTer,you should know the password. Now input it."</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">string</span>a;</span><br><span class="line"><span class="built_in">string</span>b = <span class="string">"https://www.csust.edu.cn"</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; a;</span><br><span class="line"><span class="keyword">if</span> ( a == b )&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"flag&#123;csuster_jiu_shi_zhe_me_sa&#125;"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"wrong!"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="眼见为实"><a href="#眼见为实" class="headerlink" title="眼见为实"></a>眼见为实</h3><p>出题思路：生成一个假密码base64一下并拆分成一个个字符生成二维码，欺骗大家去解二维码的内容，其实找答案用记事本打开凯撒一下就OK。：-）哈哈哈哈</p><p>生成图片的源码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> imageio</span><br><span class="line"><span class="keyword">import</span> qrcode</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save</span><span class="params">(string, imgs)</span>:</span></span><br><span class="line">    qr = qrcode.QRCode(</span><br><span class="line">        version=<span class="number">1</span>,</span><br><span class="line">        error_correction=qrcode.constants.ERROR_CORRECT_H,</span><br><span class="line">        box_size=<span class="number">10</span>,</span><br><span class="line">        border=<span class="number">0</span></span><br><span class="line">    )</span><br><span class="line">    qr.add_data(string)</span><br><span class="line">    qr.make(fit=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    img = qr.make_image()</span><br><span class="line">    img = img.convert(<span class="string">"RGBA"</span>)</span><br><span class="line"></span><br><span class="line">    icon = Image.open(<span class="string">"csust.png"</span>)</span><br><span class="line"></span><br><span class="line">    img_w, img_h = img.size</span><br><span class="line">    factor = <span class="number">4</span></span><br><span class="line">    size_w = int(img_w / factor)</span><br><span class="line">    size_h = int(img_h / factor)</span><br><span class="line"></span><br><span class="line">    icon_w, icon_h = icon.size</span><br><span class="line">    <span class="keyword">if</span> icon_w &gt; size_w:</span><br><span class="line">        icon_w = size_w</span><br><span class="line">    <span class="keyword">if</span> icon_h &gt; size_h:</span><br><span class="line">        icon_h = size_h</span><br><span class="line">    icon = icon.resize((icon_w, icon_h), Image.ANTIALIAS)</span><br><span class="line"></span><br><span class="line">    w = int((img_w - icon_w) / <span class="number">2</span>)</span><br><span class="line">    h = int((img_h - icon_h) / <span class="number">2</span>)</span><br><span class="line">    img.paste(icon, (w, h), icon)</span><br><span class="line"></span><br><span class="line">    img.save(imgs)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_gif</span><span class="params">(image_list, gif_name, duration=<span class="number">0.1</span>)</span>:</span></span><br><span class="line">    frames = []</span><br><span class="line">    <span class="keyword">for</span> image_name <span class="keyword">in</span> image_list:</span><br><span class="line">        frames.append(imageio.imread(image_name))</span><br><span class="line">    imageio.mimsave(gif_name, frames, <span class="string">'GIF'</span>, duration=duration)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">str = <span class="string">'白忙活了，密码不在这里！眼见不一定为实！'</span>.encode(<span class="string">'utf-8'</span>)</span><br><span class="line">bs64 = base64.b64encode(str).decode(<span class="string">"utf-8"</span>)</span><br><span class="line"></span><br><span class="line">png_list = []</span><br><span class="line"><span class="keyword">for</span> i, v <span class="keyword">in</span> enumerate(bs64):</span><br><span class="line">    save(v, <span class="string">"data/%d.png"</span> % i)</span><br><span class="line">    png_list.append(<span class="string">"data/%d.png"</span> % i)</span><br><span class="line">create_gif(png_list, <span class="string">"result.gif"</span>)</span><br></pre></td></tr></table></figure><p>生成图片后，追加了一个凯撒编码后的文本(偏移量+3)。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> cixd&#123;zprpq_flqixy_fp_sbov_dlla&#125; &gt;&gt; result.gif</span><br></pre></td></tr></table></figure><h3 id="参禅悟道"><a href="#参禅悟道" class="headerlink" title="参禅悟道"></a>参禅悟道</h3><p>作者：由sqs同学友情提供</p><p>出题思路：制作一个pptx文件，改后缀为zip后，往里面仍一个<code>佛曰</code>加密。pptx本来就是zip包啦，要不然咋pptx的体积比ppt小那么多，因为被压缩了。降低了难度，本来可以放在更里面的文件夹，伪装成配置文件的话可玩性可能更高。</p><p>扔的内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">佛曰：爍冥心爍缽無冥故蘇漫切梵吉怯輸三梵蒙穆不怯槃爍怯跋奢究即侄楞奢</span><br><span class="line">室皤般冥一婆知真怯逝摩冥度奢度諳薩侄知冥能怛蒙罰死盧滅實皤究娑明冥吉</span><br><span class="line">夷逝侄依冥羯除俱夷奢特無故藐冥菩侄怖梵死三漫集怯夜怛以度尼</span><br></pre></td></tr></table></figure><h3 id="日记里的愿望"><a href="#日记里的愿望" class="headerlink" title="日记里的愿望"></a>日记里的愿望</h3><p>出题思路：小鹤双拼加字母转数字，第三个是音调。（刚入坑小鹤双拼）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">|23,15,3|25,3,4|4,8,1|13,1,3|14,19,2|</span><br><span class="line">|wǒ|yào|dāng|mǎ|nóng|</span><br></pre></td></tr></table></figure><h3 id="简单的压缩包"><a href="#简单的压缩包" class="headerlink" title="简单的压缩包"></a>简单的压缩包</h3><p>出题思路：想到长沙理工大学的合并日期，然后就出了这个题。压缩包密码是200304，可以自行蛮力法破解。然后是jsfuck编码（太长了，我就不贴了）。降低了难度，修改了文件日期是长沙理工大学合并日期作为密码提示。</p><h3 id="你豪横你就消除222行"><a href="#你豪横你就消除222行" class="headerlink" title="你豪横你就消除222行"></a>你豪横你就消除222行</h3><p>出题思路：以前做过一个坚持10秒的题还挺好玩，所以改编了一个这个。降低了难度，让大家直接可以搜222，本来还可以绕一绕的，让大家一个个去找函数可能更好玩。</p><p>改自<a href="https://www.cnblogs.com/Renyi-Fan/p/7220327.html" target="_blank" rel="noopener">此处</a>的源码，加了个</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">this</span>.lines == <span class="number">222</span>)&#123;</span><br><span class="line">frame.setTitle(Encipher.DecodePasswd(<span class="string">"ZK8(SCE1`u8IIK7&amp;L1SdA TJQgXZ7_V&gt;Y3"</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>加密函数是网上随便找的，具体作者不详。</p><h3 id="你是管理员吗"><a href="#你是管理员吗" class="headerlink" title="你是管理员吗"></a>你是管理员吗</h3><p>改自<a href="https://blog.csdn.net/qq_27180763/article/details/83788880" target="_blank" rel="noopener">此处</a>的源码，原来的源码有些错误，SQL约束攻击。只把flag注释了一部分，降低了难度。本来全部注释，或者把flag放在Header里可能更好玩。</p><h3 id="理工大最强大脑非你莫属"><a href="#理工大最强大脑非你莫属" class="headerlink" title="理工大最强大脑非你莫属"></a>理工大最强大脑非你莫属</h3><p>出题思路：我是最强大脑粉丝(虽然好像很多都是假的)，所以自己出了一个还算是有新意的题。对每次请求生成uuid传入前端，并把uuid作为键存入答案、ip（代码记录的ip用的是request.remote_addr，经过nginx代理后就是本地地址，所以正式开发应该注意获取由nginx注入的真实ip）、超时时间信息。前端每次提交都带上这个，以确定是否超时和答案的正确性。Python的字典是线程安全的，所以不用担心像Java的HashMap并发问题。</p><p>解题思路：写个油猴子脚本即可，Python也行，或者手速快也行的咯。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ==UserScript==</span></span><br><span class="line"><span class="comment">// @name         web2</span></span><br><span class="line"><span class="comment">// @match        https://web2.looyeagee.cn/</span></span><br><span class="line"><span class="comment">// ==/UserScript==</span></span><br><span class="line"></span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="meta">    'use strict'</span>;</span><br><span class="line">   <span class="keyword">var</span> sum=<span class="number">0</span>;<span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i&lt;list.length<span class="number">-1</span>;i++)sum+=list[i];</span><br><span class="line">    <span class="built_in">document</span>.getElementsByName(<span class="string">"sum"</span>)[<span class="number">0</span>].value = sum;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><p>题目源码（Python）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf8</span></span><br><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> uuid</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, render_template, request</span><br><span class="line"></span><br><span class="line">all_result = &#123;&#125;</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">app.config[<span class="string">'JSON_AS_ASCII'</span>] = <span class="literal">False</span></span><br><span class="line">app.debug = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">sys.stdout = io.TextIOWrapper(sys.stdout.buffer, encoding=<span class="string">'gb18030'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/', methods=['POST', "GET"])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_world</span><span class="params">()</span>:</span></span><br><span class="line">    myuuid = uuid.uuid4()</span><br><span class="line">    list_rand = []</span><br><span class="line">    rand_sum = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">15</span>):</span><br><span class="line">        suiji = random.randint(<span class="number">10000</span>, <span class="number">99999</span>)</span><br><span class="line">        list_rand.append(suiji)</span><br><span class="line">        rand_sum += suiji</span><br><span class="line">    all_result[str(myuuid)] = &#123;</span><br><span class="line">        <span class="string">"time"</span>: int(time.time()) + <span class="number">12</span>,</span><br><span class="line">        <span class="string">"sum"</span>: rand_sum,</span><br><span class="line">        <span class="string">"ip"</span>: request.remote_addr</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"new.html"</span>, l=str(base64.b64encode(json.dumps(list_rand).encode(<span class="string">"utf-8"</span>)), <span class="string">"utf-8"</span>),</span><br><span class="line">                           u=myuuid)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/submit', methods=['POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">submit</span><span class="params">()</span>:</span></span><br><span class="line">    rand_sum = request.form.get(<span class="string">"sum"</span>)</span><br><span class="line">    myuuid = request.form.get(<span class="string">"u"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> rand_sum <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span> <span class="keyword">and</span> myuuid <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span> <span class="keyword">and</span> len(rand_sum) &gt;= <span class="number">5</span> <span class="keyword">and</span> len(myuuid) == <span class="number">36</span> <span class="keyword">and</span> all_result.get(</span><br><span class="line">            myuuid) <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        temp = all_result.get(myuuid)</span><br><span class="line">        <span class="keyword">if</span> str(temp[<span class="string">"sum"</span>]) == rand_sum <span class="keyword">and</span> temp[<span class="string">"time"</span>] &gt; int(time.time()):</span><br><span class="line">            temp[<span class="string">"success"</span>] = <span class="literal">True</span></span><br><span class="line">            <span class="keyword">return</span> render_template(<span class="string">"submit.html"</span>, text=<span class="string">"flag&#123;csuster_ni_zhen_kuai!&#125;"</span>)</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"submit.html"</span>, text=<span class="string">"要么你算错了，要么你超时了噢！(或者你乱提交东西！)"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/get_json', methods=['GET'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_json</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> json.dumps(all_result)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(port=<span class="number">5678</span>)</span><br></pre></td></tr></table></figure><p><code>new.html</code>（请忽略我用过时标签，太懒了不想写样式）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>你是理工大的最强大脑吗<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">center</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>请在数字显示完毕5秒内提交这些数字累加之和<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">center</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"s"</span> <span class="attr">style</span>=<span class="string">"color:red;"</span>&gt;</span>预备！<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/submit"</span> <span class="attr">method</span>=<span class="string">"POST"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"u"</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">value</span>=<span class="string">"&#123;&#123;u&#125;&#125;"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">center</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"sum"</span> <span class="attr">type</span>=<span class="string">"number"</span>/&gt;</span><span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">center</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span>/&gt;</span><span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> list = <span class="built_in">eval</span>(<span class="built_in">window</span>.atob(<span class="string">'&#123;&#123;l&#125;&#125;'</span>));</span></span><br><span class="line"><span class="actionscript">    list.push(<span class="string">"快输入答案吧！"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">change</span><span class="params">(s)</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.getElementById(<span class="string">"s"</span>).innerText = s;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; list.length; i++) &#123;</span></span><br><span class="line"><span class="actionscript">        (<span class="function"><span class="keyword">function</span> <span class="params">(i)</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">            setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> change(list[i]), <span class="number">500</span> * (i + <span class="number">1</span>))</span></span><br><span class="line">        &#125;)(i)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>submit.html</code>（请忽略我用过时标签，太懒了不想写样式）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>looyeagee版权所有<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">center</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">        &#123;&#123;text&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="运气爆棚"><a href="#运气爆棚" class="headerlink" title="运气爆棚"></a>运气爆棚</h3><p>攻防世界原题lottery，作了汉化和小改动：把原有的git泄漏改成了<a href="http://www.zip" target="_blank" rel="noopener">www.zip</a></p><p>审计代码api.php，发现弱类型比较，把传入的用户输入的数字构造成[true,true,true,true,true,true,true]即可。</p><h3 id="你来我家蹭WiFi吧！"><a href="#你来我家蹭WiFi吧！" class="headerlink" title="你来我家蹭WiFi吧！"></a>你来我家蹭WiFi吧！</h3><p>出题思路：用aircrack-ng监听网卡并抓包。包是自己抓的，密码还真是我家WiFi密码（到现在也没改噢）</p><p>aircrack-ng很强大，可以监听WiFi（当然前提是你的网卡得支持），然后把别人踢下线，趁别人重连时，获取握手包来跑密码，简直是蹭网神器。（小提醒：大家还是不要连陌生的WiFi，别人可以搞个假dns服务器，引导你去假的网站，而且别人可以很容易获取你请求的信息的，当然加密协议除外。我们应该使用Https协议来访问网站，而且一定不能忽略证书错误提示。）</p><p>解题思路：用aircrack-ng跑字典即可。</p><h3 id="儿时的回忆"><a href="#儿时的回忆" class="headerlink" title="儿时的回忆"></a>儿时的回忆</h3><p>出题思路：用电脑蓝牙给手机传个文件。svg是在线制作的，故意把字体调成白色嘻嘻嘻。降低了难度，本来可以修改一下svg的图层的高度为1，这样啥都看不到。让大家自行尝试高度可能更好玩。</p><p>解题思路：用WireShark过滤obex包，找到传文件的那条包文，利用value的十六进制字符串转成二进制文件取出flag.zip即可，或者直接用binwalk分离文件。我把难度降低了，一般蓝牙是分包发送的，不过我的flag文件太小，所以一次性就发完了。大文件的话binwalk是分不出来的，因为数据被拆分了。</p><h3 id="looyeagee-cn"><a href="#looyeagee-cn" class="headerlink" title="looyeagee.cn"></a>looyeagee.cn</h3><p>出题思路：域名加上TXT记录，并将flag16进制编码了一下。</p><p>解题思路：nslookup -q=TXT looyeagee.cn</p><p>然后解码即可</p><h3 id="PWN"><a href="#PWN" class="headerlink" title="PWN"></a>PWN</h3><p>攻防世界原题</p><p>nc ctf.looyeagee.cn 7001</p><p>执行ls看到flag</p><p>cat flag即可</p><p><img data-src="https://cdn.looyeagee.cn/blog/img/pwn.png-blog" alt="图1:pwn"></p><h3 id="啥事留个言呗"><a href="#啥事留个言呗" class="headerlink" title="啥事留个言呗"></a>啥事留个言呗</h3><p>WP：<a href="https://blog.csdn.net/weixin_43940853/article/details/105121265" target="_blank" rel="noopener">https://blog.csdn.net/weixin_43940853/article/details/105121265</a></p>]]></content>
      
      
      <categories>
          
          <category> 折腾 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[开源]自动获取当天课表并发送至邮箱</title>
      <link href="software/class_schedule/"/>
      <url>software/class_schedule/</url>
      
        <content type="html"><![CDATA[<h3 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h3><p>学校教务系统更换成了强智教务系统<em>（吐槽：花了200万的教务系统连个手机客户端都没有，且根本没对手机进行适配）</em>，导致没有较好的手机客户端能适配，很多同学们用的第三方客户端都出现了乱码或者缺课的现象。由于我手机开发实在不行，所以我萌生了每天0点自动发送今天课表加本周课表到我自己的邮箱的这么一个想法。<a id="more"></a></p><h3 id="二、抓包分析"><a href="#二、抓包分析" class="headerlink" title="二、抓包分析"></a>二、抓包分析</h3><h4 id="1、登录"><a href="#1、登录" class="headerlink" title="1、登录"></a>1、登录</h4><p>我们打开官网后，输入账号密码点击登录按钮，发现第一个包是<code>POST /Logon.do?method=logon&amp;flag=sess</code>返回了一串字符，到这里不清楚这是干啥的；然后第二个包是<code>POST /Logon.do?method=logon</code>，传入了<code>userAccount(学号)</code>和<code>encoded(密文)</code>返回了一个重定向，第三个包是访问了刚刚的重定向网址结果又重定向到了<code>/jsxsd/framework/xsMain.jsp</code>主页。</p><p>分析到这里，我们发现密码是被加密了再传输的。我第一个想到的是右键查看源代码看看密文是怎么来的吧，登录按钮直接绑定了js函数<code>login()</code>，跳转到这里发现如下代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span>($(<span class="string">"#userAccount"</span>).val() == <span class="string">""</span>) &#123;</span><br><span class="line">$(<span class="string">"#showMsg"</span>).text(<span class="string">"请输入账号"</span>);</span><br><span class="line">$(<span class="string">"#userAccount"</span>).focus();</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($(<span class="string">"#userPassword"</span>).val() == <span class="string">""</span>) &#123;</span><br><span class="line">$(<span class="string">"#showMsg"</span>).text(<span class="string">"请输入密码"</span>);</span><br><span class="line">$(<span class="string">"#userPassword"</span>).focus();</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> strUrl = <span class="string">"/Logon.do?method=logon&amp;flag=sess"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$.ajax( &#123;</span><br><span class="line">url:strUrl,</span><br><span class="line">  type:<span class="string">"post"</span>,</span><br><span class="line">  cache:<span class="literal">false</span>,</span><br><span class="line">dataType:<span class="string">"text"</span>,</span><br><span class="line">success:<span class="function"><span class="keyword">function</span>(<span class="params">dataStr</span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(dataStr==<span class="string">"no"</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"> &#125;<span class="keyword">else</span>&#123;</span><br><span class="line"> <span class="keyword">var</span> scode=dataStr.split(<span class="string">"#"</span>)[<span class="number">0</span>];</span><br><span class="line">     <span class="keyword">var</span> sxh=dataStr.split(<span class="string">"#"</span>)[<span class="number">1</span>];</span><br><span class="line">     <span class="keyword">var</span> code=<span class="built_in">document</span>.getElementById(<span class="string">"userAccount"</span>).value+<span class="string">"%%%"</span>+<span class="built_in">document</span>.getElementById(<span class="string">"userPassword"</span>).value;</span><br><span class="line"> <span class="keyword">var</span> encoded=<span class="string">""</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;code.length;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(i&lt;<span class="number">20</span>)&#123;</span><br><span class="line">encoded=encoded+code.substring(i,i+<span class="number">1</span>)+scode.substring(<span class="number">0</span>,<span class="built_in">parseInt</span>(sxh.substring(i,i+<span class="number">1</span>)));</span><br><span class="line">    scode = scode.substring(<span class="built_in">parseInt</span>(sxh.substring(i,i+<span class="number">1</span>)),scode.length);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    encoded=encoded+code.substring(i,code.length);</span><br><span class="line">    i=code.length;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">"encoded"</span>).value=encoded;</span><br><span class="line"><span class="keyword">if</span>(<span class="string">"logon"</span>!=<span class="string">"logonLdap"</span>)&#123;</span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">"userPassword"</span>).value=<span class="string">""</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">"loginForm"</span>).submit();</span><br><span class="line"> &#125;</span><br><span class="line">&#125;,</span><br><span class="line">error:<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"> alert(<span class="string">"计算异常！"</span>);</span><br><span class="line">&#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发现了猫腻，原来这里访问了第一个包得到的字符串是一串可以说是<code>密钥</code>的东西；通过一系列算法把密码加密成密文，我把这段翻译成了Python代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encrypt_password</span><span class="params">(xuehao, password, dataStr)</span>:</span></span><br><span class="line">    sCode, sxh = dataStr.split(<span class="string">"#"</span>)</span><br><span class="line">    code = xuehao + <span class="string">"%%%"</span> + password</span><br><span class="line">    encoded = <span class="string">""</span></span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> i &lt; len(code):</span><br><span class="line">        <span class="keyword">if</span> i &lt; <span class="number">20</span>:</span><br><span class="line">            encoded = encoded + code[i:i + <span class="number">1</span>] + sCode[<span class="number">0</span>:int(sxh[i:i + <span class="number">1</span>])]</span><br><span class="line">            sCode = sCode[int(sxh[i:i + <span class="number">1</span>]):len(sCode)]</span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            encoded = encoded + code[i:len(code)]</span><br><span class="line">            i = len(code)</span><br><span class="line">    <span class="keyword">return</span> encoded</span><br></pre></td></tr></table></figure><p>得到密文之后，就可以正常登录了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">s = requests.session()</span><br><span class="line">r = s.post(url=<span class="string">"http://xk.csust.edu.cn/Logon.do?method=logon&amp;flag=sess"</span>)</span><br><span class="line"></span><br><span class="line">r = s.post(url=<span class="string">"http://xk.csust.edu.cn/Logon.do?method=logon"</span>,</span><br><span class="line">           data=&#123;<span class="string">"userAccount"</span>: xh, <span class="string">"encoded"</span>: encrypt_password(xh, mm, r.text)&#125;)</span><br></pre></td></tr></table></figure><h4 id="2、-可选-获得姓名"><a href="#2、-可选-获得姓名" class="headerlink" title="2、[可选]获得姓名"></a>2、[可选]获得姓名</h4><p>登录后重定向两次到了<code>/jsxsd/framework/xsMain.jsp</code>，里面含有名字可以取出，查看源码容易知道用正则</p><p><code>&lt;span class=&quot;glyphicon-class&quot;&gt;(.*?)&lt;/span&gt;</code>可以返回的第一个数据就是姓名。</p><h4 id="3、-可选-获得当前周"><a href="#3、-可选-获得当前周" class="headerlink" title="3、[可选]获得当前周"></a>3、[可选]获得当前周</h4><p>我们发现主页是多个iframe框架拼凑的，第几周的信息在<code>/jsxsd/framework/xsMain_new.jsp</code>路径下，查看源码容易知道用正则<code>&gt;(.*?)&lt;/span&gt;/(.*?)$</code>可以返回第几周和总周数。</p><h4 id="4、获得课表"><a href="#4、获得课表" class="headerlink" title="4、获得课表"></a>4、获得课表</h4><p>分析包容易发现<code>/jsxsd/framework/main_index_loadkb.jsp</code>就是课表的网页，传入的<code>rq</code>参数是当天的日期，传入日期不同课表显示不同。但是课表名字过长的话会显示..导致显示不全，刚开始我还以为是前端CSS造成的，结果是后端就处理好的！汗！幸好我们将鼠标滑动的时候能显示出详细的信息，所以通过查看源码可以得到课程的完整名称和地点。课程的详细信息在<code>td标签</code>里的<code>p标签</code>的<code>title属性</code>里。我们把所有的数据打包成一个二维数组，供生成图片使用。</p><p>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">r = s.post(url=<span class="string">"http://xk.csust.edu.cn/jsxsd/framework/main_index_loadkb.jsp"</span>, data=&#123;<span class="string">"rq"</span>: time.strftime(<span class="string">"%Y-%m-%d"</span>, timeStruct)&#125;)</span><br><span class="line"></span><br><span class="line">table_data = []  <span class="comment"># 全部数据数组</span></span><br><span class="line">table_header = re.findall(<span class="string">r'&lt;th[^&gt;]*"&gt;(.*?)&lt;/th&gt;'</span>, r.text)  <span class="comment"># 表头</span></span><br><span class="line">table_data.append(table_header)</span><br><span class="line">header_length = len(table_header)  <span class="comment"># 取得几列 也就是表头个数</span></span><br><span class="line">all_td_content = re.findall(<span class="string">r'&lt;td[^&gt;]*&gt;(.*?)&lt;/td&gt;'</span>, r.text.replace(<span class="string">"\t"</span>, <span class="string">""</span>).replace(<span class="string">"\n"</span>, <span class="string">""</span>))  <span class="comment"># 取得所有td内容 删除换行符号和制表符</span></span><br><span class="line"></span><br><span class="line">temp = []  <span class="comment"># 临时存储单行的数据</span></span><br><span class="line"><span class="keyword">for</span> i, v <span class="keyword">in</span> enumerate(all_td_content):</span><br><span class="line">    <span class="keyword">if</span> i % header_length == <span class="number">0</span>:  <span class="comment"># 说明这是这一行的第一个数据 也就是表格中的第几节</span></span><br><span class="line">        dijijie = v.split(<span class="string">"&lt;br/&gt;"</span>)</span><br><span class="line">        temp.append(<span class="string">"\n%s\n%s\n%s"</span> % (dijijie[<span class="number">0</span>], dijijie[<span class="number">1</span>], dijijie[<span class="number">2</span>]))</span><br><span class="line">    <span class="keyword">else</span>:  <span class="comment"># 否则就是具体课程啦</span></span><br><span class="line">        name = findMiddle(v, <span class="string">"课程名称："</span>, <span class="string">"&lt;br/&gt;"</span>)</span><br><span class="line">        room = findMiddle(v, <span class="string">"上课地点："</span>, <span class="string">"'"</span>)</span><br><span class="line">        temp.append(<span class="string">"\n"</span> + name + <span class="string">"\n\n"</span> + room + <span class="string">"\n"</span>)</span><br><span class="line">    <span class="keyword">if</span> (i + <span class="number">1</span>) % header_length == <span class="number">0</span>:  <span class="comment"># 检测目前td内容是不是一行的最后一个数据 如果是就把这一整行给加入总的二维表</span></span><br><span class="line">        table_data.append(temp)</span><br><span class="line">        temp = []</span><br><span class="line"></span><br><span class="line">print(table_data)</span><br></pre></td></tr></table></figure><p>生成的数据长这个样子</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    [</span><br><span class="line">        <span class="string">"周/节次"</span>,</span><br><span class="line">        <span class="string">"星期一"</span>,</span><br><span class="line">        <span class="string">"星期二"</span>,</span><br><span class="line">        <span class="string">"星期三"</span>,</span><br><span class="line">        <span class="string">"星期四"</span>,</span><br><span class="line">        <span class="string">"星期五"</span>,</span><br><span class="line">        <span class="string">"星期六"</span>,</span><br><span class="line">        <span class="string">"星期日"</span></span><br><span class="line">    ],</span><br><span class="line">    [</span><br><span class="line">        <span class="string">"\n第一大节\n(01,02小节)\n08:00-09:40"</span>,</span><br><span class="line">        <span class="string">"\n人工智能概论\n\n云综教[假装打码]\n"</span>,</span><br><span class="line">        <span class="string">"\n英语听说写译综合\n\n云综教[假装打码]\n"</span>,</span><br><span class="line">        <span class="string">"\n软件项目管理及案例\n\n云文科[假装打码]\n"</span>,</span><br><span class="line">        <span class="string">"\n软件工程经济学\n\n云文科[假装打码]\n"</span>,</span><br><span class="line">        <span class="string">"\n\n\n\n"</span>,</span><br><span class="line">        <span class="string">"\n\n\n\n"</span>,</span><br><span class="line">        <span class="string">"\n\n\n\n"</span></span><br><span class="line">    ],</span><br><span class="line">    [</span><br><span class="line">        <span class="string">"\n第二大节\n(03,04小节)\n10:00-11:40"</span>,</span><br><span class="line">        <span class="string">"\n\n\n\n"</span>,</span><br><span class="line">        <span class="string">"\n\n\n\n"</span>,</span><br><span class="line">        <span class="string">"\n\n\n\n"</span>,</span><br><span class="line">        <span class="string">"\n\n\n\n"</span>,</span><br><span class="line">        <span class="string">"\n\n\n\n"</span>,</span><br><span class="line">        <span class="string">"\n\n\n\n"</span>,</span><br><span class="line">        <span class="string">"\n\n\n\n"</span></span><br><span class="line">    ],</span><br><span class="line">    [</span><br><span class="line">        <span class="string">"\n第三大节\n(05,06小节)\n14:00-15:40"</span>,</span><br><span class="line">        <span class="string">"\n\n\n\n"</span>,</span><br><span class="line">        <span class="string">"\n\n\n\n"</span>,</span><br><span class="line">        <span class="string">"\n\n\n\n"</span>,</span><br><span class="line">        <span class="string">"\n人工智能概论\n\n云综教[假装打码]\n"</span>,</span><br><span class="line">        <span class="string">"\n\n\n\n"</span>,</span><br><span class="line">        <span class="string">"\n\n\n\n"</span>,</span><br><span class="line">        <span class="string">"\n\n\n\n"</span></span><br><span class="line">    ],</span><br><span class="line">    [</span><br><span class="line">        <span class="string">"\n第四大节\n(07,08小节)\n16:00-17:40"</span>,</span><br><span class="line">        <span class="string">"\n\n\n\n"</span>,</span><br><span class="line">        <span class="string">"\n\n\n\n"</span>,</span><br><span class="line">        <span class="string">"\n\n\n\n"</span>,</span><br><span class="line">        <span class="string">"\n\n\n\n"</span>,</span><br><span class="line">        <span class="string">"\n\n\n\n"</span>,</span><br><span class="line">        <span class="string">"\n\n\n\n"</span>,</span><br><span class="line">        <span class="string">"\n\n\n\n"</span></span><br><span class="line">    ],</span><br><span class="line">    [</span><br><span class="line">        <span class="string">"\n第五大节\n(09,10小节)\n19:30-21:10"</span>,</span><br><span class="line">        <span class="string">"\n\n\n\n"</span>,</span><br><span class="line">        <span class="string">"\n\n\n\n"</span>,</span><br><span class="line">        <span class="string">"\n\n\n\n"</span>,</span><br><span class="line">        <span class="string">"\n\n\n\n"</span>,</span><br><span class="line">        <span class="string">"\n\n\n\n"</span>,</span><br><span class="line">        <span class="string">"\n\n\n\n"</span>,</span><br><span class="line">        <span class="string">"\n\n\n\n"</span></span><br><span class="line">    ]</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>然后参考<code>https://www.cnblogs.com/xiamibk/p/10299609.html</code>的文章，执行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">create_table_img(table_data, xh + <span class="string">'('</span> + rq + <span class="string">')课表.png'</span>, font=<span class="string">"font.ttf"</span>,</span><br><span class="line">                 describe=<span class="string">'以上数据仅供参考，作者：亦之(looyeagee)博客地址：https://looyeagee.cn/'</span>,</span><br><span class="line">                 table_title=xm + <span class="string">'('</span> + rq + <span class="string">')[%s]的课程表'</span> % now_zhou)</span><br></pre></td></tr></table></figure><p>将二维数组表转换成图片就是这样：</p><p><img data-src="https://cdn.looyeagee.cn/blog/img/2020/02/1015774712.png-blog" alt="图1:课表截图"></p><h3 id="三、自动发送邮件"><a href="#三、自动发送邮件" class="headerlink" title="三、自动发送邮件"></a>三、自动发送邮件</h3><p>首先我们在163邮箱里创建一个授权码当做第三方客户端的密码，然后就可以将当天的课表和本周的课表图发出去了。</p><h4 id="1、获得当天课表"><a href="#1、获得当天课表" class="headerlink" title="1、获得当天课表"></a>1、获得当天课表</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">t = table_data.copy()  <span class="comment"># 复制一份刚刚生成的二维表</span></span><br><span class="line"><span class="keyword">del</span> (t[<span class="number">0</span>])  <span class="comment"># 删除第一行 也就是星期几的那一行</span></span><br><span class="line">table_data_90 = [[row[i] <span class="keyword">for</span> row <span class="keyword">in</span> t] <span class="keyword">for</span> i <span class="keyword">in</span> range(len(t[<span class="number">0</span>]))]  <span class="comment"># 矩阵转置</span></span><br><span class="line">today = <span class="string">"你的今日课表如下：&lt;br&gt;"</span></span><br><span class="line"><span class="keyword">for</span> i, v <span class="keyword">in</span> enumerate(table_data_90[<span class="number">0</span>]):</span><br><span class="line">    detail_kecheng = table_data_90[datetime.datetime.now().weekday() + <span class="number">1</span>][i].split()</span><br><span class="line">    <span class="keyword">if</span> len(detail_kecheng) != <span class="number">0</span>:</span><br><span class="line">        today = today + <span class="string">"%s:%s(%s)&lt;br&gt;"</span> % (v.split()[<span class="number">2</span>], detail_kecheng[<span class="number">0</span>], detail_kecheng[<span class="number">1</span>])</span><br></pre></td></tr></table></figure><h4 id="2、PNG图片转Base64"><a href="#2、PNG图片转Base64" class="headerlink" title="2、PNG图片转Base64"></a>2、PNG图片转Base64</h4><p>不想以附件的形式发邮件了，就直接用base64图片返回的是HTML的IMG标签：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">img_to_base64_img</span><span class="params">(fileName)</span>:</span></span><br><span class="line">    img_file = open(fileName, <span class="string">'rb'</span>)</span><br><span class="line">    base64_data = base64.b64encode(img_file.read())</span><br><span class="line">    img_file.close()</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'&lt;img src="data:image/png;base64,%s"&gt;'</span> % str(base64_data, <span class="string">"utf8"</span>)</span><br></pre></td></tr></table></figure><h4 id="3、发送邮件"><a href="#3、发送邮件" class="headerlink" title="3、发送邮件"></a>3、发送邮件</h4><p>没啥好说的，贴代码吧</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sent_email</span><span class="params">(sender, pwd, receiver, text, img_path)</span>:</span></span><br><span class="line">    host = <span class="string">'smtp.163.com'</span></span><br><span class="line">    port = <span class="number">465</span></span><br><span class="line">    body = img_to_base64_img(img_path)</span><br><span class="line">    msg = MIMEText(text + <span class="string">"&lt;br&gt;"</span> + body, <span class="string">'html'</span>)</span><br><span class="line">    msg[<span class="string">'subject'</span>] = <span class="string">'%s的课表'</span> % rq</span><br><span class="line">    msg[<span class="string">'from'</span>] = sender</span><br><span class="line">    msg[<span class="string">'to'</span>] = receiver</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        s = smtplib.SMTP_SSL(host, port)</span><br><span class="line">        s.login(sender, pwd)</span><br><span class="line">        s.sendmail(sender, receiver, msg.as_string())</span><br><span class="line">        s.close()</span><br><span class="line">        print(<span class="string">'Done.sent email success'</span>)</span><br><span class="line">    <span class="keyword">except</span> smtplib.SMTPException:</span><br><span class="line">        print(<span class="string">'Error.sent email fail'</span>)</span><br></pre></td></tr></table></figure><p>然后在Linux设个定时任务就行了啦！</p><p><img data-src="https://cdn.looyeagee.cn/blog/img/2020/02/2546744912.jpg-blog" alt="图2:邮箱截图"></p>]]></content>
      
      
      <categories>
          
          <category> 原创软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 强智 </tag>
            
            <tag> 教务系统 </tag>
            
            <tag> 课表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mybatis Plus带多条件的多表联合、分页、排序查询</title>
      <link href="notes/MP/"/>
      <url>notes/MP/</url>
      
        <content type="html"><![CDATA[<blockquote><p>注意：本程序使用SpringBoot+Mybatis Plus</p></blockquote><p>Mybatis Plus的分页插件自定义性不是很强，所以打算手动写Mapper来进行多表联合查询。<a id="more"></a></p><h2 id="一、现有表"><a href="#一、现有表" class="headerlink" title="一、现有表"></a>一、现有表</h2><h3 id="student学生表："><a href="#student学生表：" class="headerlink" title="student学生表："></a>student学生表：</h3><table><thead><tr><th>id</th><th>stuName</th><th>stuAge</th><th>graduateDate</th><th>facultyId</th></tr></thead><tbody><tr><td>1</td><td>卢1</td><td>21</td><td>2019-11-20 20:29:20</td><td>1</td></tr><tr><td>2</td><td>卢2</td><td>20</td><td>2019-11-27 20:29:40</td><td>2</td></tr><tr><td>3</td><td>卢3</td><td>22</td><td>2019-11-28 20:29:53</td><td>3</td></tr><tr><td>4</td><td>卢4</td><td>17</td><td>2019-11-28 20:30:20</td><td>2</td></tr><tr><td>5</td><td>卢5</td><td>17</td><td>2019-11-21 20:29:20</td><td>1</td></tr><tr><td>6</td><td>卢6</td><td>17</td><td>2025-12-11 20:29:20</td><td>3</td></tr><tr><td>7</td><td>卢7</td><td>20</td><td>2019-11-20 20:29:20</td><td>2</td></tr><tr><td>8</td><td>卢8</td><td>22</td><td>2019-11-27 20:29:40</td><td>3</td></tr><tr><td>9</td><td>卢9</td><td>17</td><td>2025-12-11 20:29:20</td><td>2</td></tr><tr><td>10</td><td>卢10</td><td>21</td><td>2019-11-28 20:30:20</td><td>1</td></tr><tr><td>11</td><td>卢11</td><td>17</td><td>2019-11-21 20:29:20</td><td>1</td></tr><tr><td>12</td><td>卢12</td><td>17</td><td>2019-11-11 20:29:20</td><td>3</td></tr><tr><td>13</td><td>卢13</td><td>17</td><td>2019-11-20 20:29:20</td><td>2</td></tr><tr><td>14</td><td>卢14</td><td>18</td><td>2025-12-11 20:29:20</td><td>3</td></tr><tr><td>15</td><td>卢15</td><td>22</td><td>2019-11-28 20:29:53</td><td>3</td></tr><tr><td>16</td><td>卢16</td><td>22</td><td>2019-11-28 20:30:20</td><td>1</td></tr><tr><td>17</td><td>卢17</td><td>18</td><td>2019-11-21 20:29:20</td><td>1</td></tr><tr><td>18</td><td>卢18</td><td>20</td><td>2025-12-11 20:29:20</td><td>2</td></tr><tr><td>19</td><td>卢19</td><td>21</td><td>2019-11-21 20:29:20</td><td>3</td></tr><tr><td>20</td><td>卢20</td><td>19</td><td>2025-12-11 20:29:20</td><td>3</td></tr><tr><td>21</td><td>卢21</td><td>18</td><td>2019-11-28 22:16:17</td><td>1</td></tr></tbody></table><h3 id="facultylist学院表："><a href="#facultylist学院表：" class="headerlink" title="facultylist学院表："></a>facultylist学院表：</h3><table><thead><tr><th>id</th><th>facultyName</th></tr></thead><tbody><tr><td>1</td><td>计算机与通信工程学院</td></tr><tr><td>2</td><td>数学与统计学院</td></tr><tr><td>3</td><td>文法学院</td></tr></tbody></table><h2 id="二、同时满足以下需求："><a href="#二、同时满足以下需求：" class="headerlink" title="二、同时满足以下需求："></a>二、同时满足以下需求：</h2><h3 id="1-多表联合查询出学院名字"><a href="#1-多表联合查询出学院名字" class="headerlink" title="1.多表联合查询出学院名字"></a>1.多表联合查询出学院名字</h3><p>需求展示：学生表联合学院表隐去学院id直接展示学院名给用户：</p><table><thead><tr><th>id</th><th>stuName</th><th>stuAge</th><th>graduateDate</th><th>facultyName</th></tr></thead><tbody><tr><td>1</td><td>卢1</td><td>21</td><td>2019-11-20 20:29:20</td><td>计算机与通信工程学院</td></tr><tr><td>2</td><td>卢2</td><td>20</td><td>2019-11-27 20:29:40</td><td>数学与统计学院</td></tr><tr><td>3</td><td>卢3</td><td>22</td><td>2019-11-28 20:29:53</td><td>文法学院</td></tr><tr><td>4</td><td>卢4</td><td>17</td><td>2019-11-28 20:30:20</td><td>数学与统计学院</td></tr><tr><td>5</td><td>卢5</td><td>17</td><td>2019-11-21 20:29:20</td><td>计算机与通信工程学院</td></tr><tr><td>…</td><td>…</td><td>…</td><td>…</td><td>…</td></tr></tbody></table><h3 id="2-可以带多条件查询"><a href="#2-可以带多条件查询" class="headerlink" title="2.可以带多条件查询"></a>2.可以带多条件查询</h3><h4 id="学生名字模糊搜索"><a href="#学生名字模糊搜索" class="headerlink" title="学生名字模糊搜索"></a>学生名字模糊搜索</h4><h4 id="年龄范围搜索"><a href="#年龄范围搜索" class="headerlink" title="年龄范围搜索"></a>年龄范围搜索</h4><h4 id="搜索是否毕业"><a href="#搜索是否毕业" class="headerlink" title="搜索是否毕业"></a>搜索是否毕业</h4><h4 id="指定字段排序"><a href="#指定字段排序" class="headerlink" title="指定字段排序"></a>指定字段排序</h4><h3 id="3-指定页码，页数据大小进行物理分页查询"><a href="#3-指定页码，页数据大小进行物理分页查询" class="headerlink" title="3.指定页码，页数据大小进行物理分页查询"></a>3.指定页码，页数据大小进行物理分页查询</h3><h2 id="三、解决步骤"><a href="#三、解决步骤" class="headerlink" title="三、解决步骤"></a>三、解决步骤</h2><p>今天找了一下午资料，终于可以同时满足以上所有需求了！开干！</p><h3 id="Spring-Boot配置"><a href="#Spring-Boot配置" class="headerlink" title="Spring Boot配置"></a>Spring Boot配置</h3><p>重要配置已经做注释！</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">server.port</span>=<span class="string">9999</span></span><br><span class="line"><span class="comment">#设置jackson的时区和输出形式</span></span><br><span class="line"><span class="meta">spring.jackson.time-zone</span>=<span class="string">GMT+8</span></span><br><span class="line"><span class="meta">spring.jackson.date-format</span>=<span class="string">yyyy-MM-dd HH:mm:ss</span></span><br><span class="line"><span class="comment">#URL要设置数据库编码、时区、允许多语句查询（等会会讲原因）</span></span><br><span class="line"><span class="meta">spring.datasource.url</span>=<span class="string">jdbc:mysql://127.0.0.1:3306/test?characterEncoding=utf-8&amp;serverTimezone=GMT%2b8&amp;allowMultiQueries=true</span></span><br><span class="line"><span class="meta">spring.datasource.username</span>=<span class="string">root</span></span><br><span class="line"><span class="meta">spring.datasource.password</span>=<span class="string">6666</span></span><br><span class="line"><span class="meta">spring.datasource.driver-class-name</span>=<span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="comment">#关闭字段名的映射（关闭如userName映射成user_name）</span></span><br><span class="line"><span class="meta">mybatis-plus.configuration.map-underscore-to-camel-case</span>=<span class="string">false</span></span><br><span class="line"><span class="comment">#配置xml Mapper路径</span></span><br><span class="line"><span class="meta">mybatis-plus.mapper-locations</span>=<span class="string">classpath:mapping/*Mapper.xml</span></span><br></pre></td></tr></table></figure><h3 id="MP配置"><a href="#MP配置" class="headerlink" title="MP配置"></a>MP配置</h3><p>创建一个MP的配置类写入如下内容，主要是配置mapper路径</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.looyeagee.web.util;</span><br><span class="line"><span class="keyword">import</span> org.mybatis.spring.annotation.MapperScan;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.EnableTransactionManagement;</span><br><span class="line"></span><br><span class="line"><span class="meta">@EnableTransactionManagement</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@MapperScan</span>(<span class="string">"com.looyeagee.web.mapper"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MybatisPlusConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="实体类编写"><a href="#实体类编写" class="headerlink" title="实体类编写"></a>实体类编写</h3><h4 id="Student-java"><a href="#Student-java" class="headerlink" title="Student.java"></a>Student.java</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.looyeagee.web.bean;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.annotation.JsonInclude;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@JsonInclude</span>(JsonInclude.Include.NON_NULL)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> String stuName;</span><br><span class="line">    <span class="keyword">private</span> Integer stuAge;</span><br><span class="line">    <span class="keyword">private</span> Date graduateDate;</span><br><span class="line">    <span class="keyword">private</span> Long facultyId;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Select-java（把查询条件封装成类）"><a href="#Select-java（把查询条件封装成类）" class="headerlink" title="Select.java（把查询条件封装成类）"></a>Select.java（把查询条件封装成类）</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.looyeagee.web.bean;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Select</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    String stuName;<span class="comment">//模糊搜索学生名</span></span><br><span class="line">    Integer minAge;<span class="comment">//最小年龄 用Integer不用int是因为用户可以不选择此条件（null）即没有最小年龄限制 用int默认值是0</span></span><br><span class="line">    Integer maxAge;<span class="comment">//最大年龄</span></span><br><span class="line">    Boolean isGraduate;<span class="comment">//是否毕业 为null就是不管毕业还是没毕业都要</span></span><br><span class="line">    Integer pageNumber;<span class="comment">//第几页 从1开始</span></span><br><span class="line">    Integer pageSize;<span class="comment">//每页几个数据</span></span><br><span class="line">    String orderBy;<span class="comment">//排序字段</span></span><br><span class="line">    Boolean highToLow;<span class="comment">//是否降序 为false和null就是升序 为true就是降序</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Result-java（把结果也封装）"><a href="#Result-java（把结果也封装）" class="headerlink" title="Result.java（把结果也封装）"></a>Result.java（把结果也封装）</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.looyeagee.web.bean;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.annotation.JsonInclude;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@JsonInclude</span>(JsonInclude.Include.NON_NULL)<span class="comment">//为null的字段 不输出到前端 看以下的stuAge字段</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Result</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> String stuName;</span><br><span class="line">    <span class="keyword">private</span> Integer stuAge;<span class="comment">//为什么要用Integer而不是int 因为int会有默认值0，而Integer默认是null，如果查到年龄为null就会显示为0岁了，这样输出到前端就是0岁，而我们不期望前端展示为null的数据</span></span><br><span class="line">    <span class="keyword">private</span> Date graduateDate;</span><br><span class="line">    <span class="keyword">private</span> String facultyName;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="StudentMapper-xml编写"><a href="#StudentMapper-xml编写" class="headerlink" title="StudentMapper.xml编写"></a>StudentMapper.xml编写</h3><p>前提知识：</p><h4 id="mysql如何通过当前页码和页数据条数分页？"><a href="#mysql如何通过当前页码和页数据条数分页？" class="headerlink" title="mysql如何通过当前页码和页数据条数分页？"></a>mysql如何通过当前页码和页数据条数分页？</h4><p>mysql <code>limit m,n</code>是mysql分页用的语句，不过此处的m不是当前页码而是从第几条数据开始，n是取几条数据。所以假设PageNumber为第几页，PageSize为一页数据条数，则写法为<code>limit (PageNumber-1)*PageSize,PageSize</code></p><h4 id="如何用mysql-limit分页查询的同时返回符合条件数据总数以确定总页数？"><a href="#如何用mysql-limit分页查询的同时返回符合条件数据总数以确定总页数？" class="headerlink" title="如何用mysql limit分页查询的同时返回符合条件数据总数以确定总页数？"></a>如何用mysql limit分页查询的同时返回符合条件数据总数以确定总页数？</h4><p>用上面的方法虽然能分页，但是没有查出符合条件总个数，所以就不知道数据总共有多少页数。MP内部分页的实现是先查询符合条件的个数再用limit查询，不过这样会导致两次查询浪费资源，而且要写2个条件一模一样的select查询，很不方便，这里有个解决方案可以一次性返回数据和总条数：通过<code>SQL_CALC_FOUND_ROWS</code>和<code>SELECT FOUND_ROWS()</code>来获取。<br>为了说的更清楚，我直接贴出测试sql：我的21个数据中名字含有字符<code>&quot;2&quot;</code>的有4个同学，我想每页展示2条数据，并且访问第1页：根据我贴出的数据，满足条件的有4个，id分别为2,12,20,21。因为1页只展示2个数据，所以第1页应该是返回2,12这两个数据。语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">SQL_CALC_FOUND_ROWS</span> * <span class="keyword">FROM</span> <span class="string">`student`</span> <span class="keyword">WHERE</span> stuName <span class="keyword">LIKE</span> <span class="string">'%2%'</span> <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">2</span>;<span class="keyword">SELECT</span> <span class="keyword">FOUND_ROWS</span>();</span><br></pre></td></tr></table></figure><p>执行后一次性返回2个结果集（这就是前面要配置一次性可执行多个语句的原因，默认不可以一次性执行多个语句），如图：<br><img data-src="https://cdn.looyeagee.cn/blog/img/2019/11/3012192170.png-blog" alt="图1:结果集1截图"></p><p><img data-src="https://cdn.looyeagee.cn/blog/img/2019/11/2437070153.png-blog" alt="图2:结果集2截图"></p><p>第二个结果集就是总条数。下面介绍Mapper的配置。</p><p>2个结果集的配置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"ResultMap"</span> <span class="attr">type</span>=<span class="string">"com.looyeagee.web.bean.Result"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"RecordsCount"</span> <span class="attr">type</span>=<span class="string">"integer"</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>resultMap标签是mapper的子标签用来指定结果集的id和类型。由于返回的第一个结果集的结果为我们定义的实体类Result，所以类型填写完整实体类路径；由于返回的第二个结果集的结果为一个整数，所以类型是integer。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findResultByInfo"</span> <span class="attr">resultMap</span>=<span class="string">"ResultMap,RecordsCount"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">parameterType</span>=<span class="string">"com.looyeagee.web.bean.Select"</span> <span class="attr">resultType</span>=<span class="string">"java.util.List"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在select标签中添加<code>resultMap</code>属性来指定结果集的id，由于这个select会返回2个结果集，所以resultMap属性填写2个刚刚定义的结果集id，用英文逗号隔开。<code>parameterType</code>属性就是我们封装的查询实体类。返回的结果类型是List。</p><p>下面贴出完整多条件查询代码：<br>注意：<br>1.大于号小于号要用xml实体字符转义。<br>2.orderby字段的使用要用${}，不让程序自动预编译。<br>3.排序多加一个通过id升序，因为mysql排序是不稳定的，可能会出现不同页数出现相同数据的情况。<br>4.此处传进去的pageNumber已经经过了<code>PageNumber=(PageNumber-1)*PageSize</code>的处理。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.looyeagee.web.mapper.StudentMapper"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"ResultMap"</span> <span class="attr">type</span>=<span class="string">"com.looyeagee.web.bean.Result"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"RecordsCount"</span> <span class="attr">type</span>=<span class="string">"integer"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findResultByInfo"</span> <span class="attr">resultMap</span>=<span class="string">"ResultMap,RecordsCount"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">parameterType</span>=<span class="string">"com.looyeagee.web.bean.Select"</span> <span class="attr">resultType</span>=<span class="string">"java.util.List"</span>&gt;</span></span><br><span class="line">        SELECT SQL_CALC_FOUND_ROWS</span><br><span class="line">        `student`.`id` AS `id`,</span><br><span class="line">        `student`.`stuName` AS `stuName`,</span><br><span class="line">        `student`.`stuAge` AS `stuAge`,</span><br><span class="line">        `student`.`graduateDate` AS `graduateDate`,</span><br><span class="line">        `facultylist`.`facultyName` AS `facultyName`</span><br><span class="line">        FROM</span><br><span class="line">        ( `facultylist` JOIN `student` )</span><br><span class="line">        WHERE</span><br><span class="line">        (</span><br><span class="line">        `facultylist`.`id` = `student`.`facultyId`)</span><br><span class="line">        -- 标题模糊搜索</span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"stuName != null"</span>&gt;</span></span><br><span class="line">            AND `student`.`stuName` LIKE CONCAT('%',#&#123;stuName&#125;,'%')</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        -- <span class="symbol">&amp;gt;</span>=是大于等于</span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"minAge!=null"</span>&gt;</span></span><br><span class="line">            AND `student`.`stuAge`<span class="symbol">&amp;gt;</span>= #&#123;minAge&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        -- <span class="symbol">&amp;lt;</span>=是小于等于</span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"maxAge!=null"</span>&gt;</span></span><br><span class="line">            AND `student`.`stuAge` <span class="symbol">&amp;lt;</span>= #&#123;maxAge&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        -- 没毕业 毕业时间大于现在</span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"isGraduate  != null and isGraduate ==false"</span>&gt;</span></span><br><span class="line">            AND `student`.`graduateDate`<span class="symbol">&amp;gt;</span>=NOW()</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        -- 毕业了 毕业时间小于现在</span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"isGraduate  != null and isGraduate ==true"</span>&gt;</span></span><br><span class="line">            AND `student`.`graduateDate`<span class="symbol">&amp;lt;</span>=NOW()</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"orderBy!=null and orderBy!=''"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"highToLow ==null or highToLow ==false"</span>&gt;</span></span><br><span class="line">                ORDER BY $&#123;orderBy&#125; ASC,`student`.`id` ASC -- 加id ASC是为了保证分页结果的唯一性 mysql排序是不稳定的 https://www.jianshu.com/p/1e8a19738ae4</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"highToLow !=null and highToLow ==true"</span>&gt;</span></span><br><span class="line">                ORDER BY $&#123;orderBy&#125; DESC,`student`.`id` ASC</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        -- 分页查询</span><br><span class="line">        LIMIT</span><br><span class="line">        #&#123;pageNumber&#125;,#&#123;pageSize&#125;;</span><br><span class="line">        -- 接着查询符合条件个数</span><br><span class="line">        SELECT FOUND_ROWS();</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="StudentMapper类编写"><a href="#StudentMapper类编写" class="headerlink" title="StudentMapper类编写"></a>StudentMapper类编写</h3><p>注意返回类型即可。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.looyeagee.web.mapper;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.mapper.BaseMapper;</span><br><span class="line"><span class="keyword">import</span> com.looyeagee.web.bean.Select;</span><br><span class="line"><span class="keyword">import</span> com.looyeagee.web.bean.Student;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">StudentMapper</span> <span class="keyword">extends</span> <span class="title">BaseMapper</span>&lt;<span class="title">Student</span>&gt; </span>&#123;</span><br><span class="line">    List&lt;List&lt;?&gt;&gt; findResultByInfo(Select select);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="测试类编写"><a href="#测试类编写" class="headerlink" title="测试类编写"></a>测试类编写</h3><p>关于总页数计算的说明：总数据条数除以每页数据条数，如果没有余数，结果就是总页数；如果有余数，则要将计算结果+1（进1法）；用一句话就是<code>(totalCount + pageSize - 1) / pageSize</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.looyeagee.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.looyeagee.web.bean.Result;</span><br><span class="line"><span class="keyword">import</span> com.looyeagee.web.bean.Select;</span><br><span class="line"><span class="keyword">import</span> com.looyeagee.web.mapper.StudentMapper;</span><br><span class="line"><span class="keyword">import</span> com.looyeagee.web.service.impl.StudentServiceImpl;</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WebApplicationTests</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    StudentMapper studentMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">selectTest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Select selectInfo = <span class="keyword">new</span> Select();</span><br><span class="line">        <span class="keyword">int</span> nowPageIndex = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> pageSize = <span class="number">5</span>;</span><br><span class="line">        selectInfo.setPageNumber((nowPageIndex - <span class="number">1</span>) * pageSize);</span><br><span class="line">        selectInfo.setPageSize(pageSize);</span><br><span class="line">        selectInfo.setOrderBy(<span class="string">"stuAge"</span>);</span><br><span class="line">        selectInfo.setHighToLow(<span class="keyword">true</span>);</span><br><span class="line">        selectInfo.setIsGraduate(<span class="keyword">true</span>);</span><br><span class="line">        selectInfo.setMinAge(<span class="number">17</span>);</span><br><span class="line">        selectInfo.setMaxAge(<span class="number">20</span>);</span><br><span class="line">        List&lt;List&lt;?&gt;&gt; findtest = studentMapper.findResultByInfo(selectInfo);</span><br><span class="line">        List&lt;Result&gt; orderinfos = (List&lt;Result&gt;) findtest.get(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">int</span> totalCount = (Integer) findtest.get(<span class="number">1</span>).get(<span class="number">0</span>);</span><br><span class="line">        System.out.println(<span class="string">"当前页面记录数："</span> + orderinfos.size());</span><br><span class="line">        System.out.println(<span class="string">"符合条件记录数："</span> + totalCount);</span><br><span class="line">        System.out.println(<span class="string">"当前页数："</span> +nowPageIndex);</span><br><span class="line">        System.out.println(<span class="string">"总页数："</span> + ((totalCount + pageSize - <span class="number">1</span>) / pageSize));</span><br><span class="line">        orderinfos.forEach(System.out::println);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上的测试是筛选在我们的21个数据中，最小年龄17,最大年龄20，已经毕业（毕业时间小于现在时间），总共结果是有9个同学：通过年龄降序分别为2，7，17，21，4，5，11，12，13号，<br>选择第1页，1页5个数据，输出结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">当前页面记录数：5</span><br><span class="line">符合条件记录数：9</span><br><span class="line">当前页数：1</span><br><span class="line">总页数：2</span><br><span class="line">Result(id&#x3D;2, stuName&#x3D;卢2, stuAge&#x3D;20, graduateDate&#x3D;Wed Nov 27 20:29:40 CST 2019, facultyName&#x3D;数学与统计学院)</span><br><span class="line">Result(id&#x3D;7, stuName&#x3D;卢7, stuAge&#x3D;20, graduateDate&#x3D;Wed Nov 20 20:29:20 CST 2019, facultyName&#x3D;数学与统计学院)</span><br><span class="line">Result(id&#x3D;17, stuName&#x3D;卢17, stuAge&#x3D;18, graduateDate&#x3D;Thu Nov 21 20:29:20 CST 2019, facultyName&#x3D;计算机与通信工程学院)</span><br><span class="line">Result(id&#x3D;21, stuName&#x3D;卢21, stuAge&#x3D;18, graduateDate&#x3D;Thu Nov 28 22:16:17 CST 2019, facultyName&#x3D;计算机与通信工程学院)</span><br><span class="line">Result(id&#x3D;4, stuName&#x3D;卢4, stuAge&#x3D;17, graduateDate&#x3D;Thu Nov 28 20:30:20 CST 2019, facultyName&#x3D;数学与统计学院)</span><br></pre></td></tr></table></figure><p>将<code>nowPageIndex</code>改为2,输出第二页结果（剩余4个数据）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">当前页面记录数：4</span><br><span class="line">符合条件记录数：9</span><br><span class="line">当前页数：2</span><br><span class="line">总页数：2</span><br><span class="line">Result(id&#x3D;5, stuName&#x3D;卢5, stuAge&#x3D;17, graduateDate&#x3D;Thu Nov 21 20:29:20 CST 2019, facultyName&#x3D;计算机与通信工程学院)</span><br><span class="line">Result(id&#x3D;11, stuName&#x3D;卢11, stuAge&#x3D;17, graduateDate&#x3D;Thu Nov 21 20:29:20 CST 2019, facultyName&#x3D;计算机与通信工程学院)</span><br><span class="line">Result(id&#x3D;12, stuName&#x3D;卢12, stuAge&#x3D;17, graduateDate&#x3D;Mon Nov 11 20:29:20 CST 2019, facultyName&#x3D;文法学院)</span><br><span class="line">Result(id&#x3D;13, stuName&#x3D;卢13, stuAge&#x3D;17, graduateDate&#x3D;Wed Nov 20 20:29:20 CST 2019, facultyName&#x3D;数学与统计学院)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>误删Win10 UEFI引导项，咋整？</title>
      <link href="zheteng/R_UEFI/"/>
      <url>zheteng/R_UEFI/</url>
      
        <content type="html"><![CDATA[<p>在安装双系统manjaro时，挂载引导时不小心选了格式化，导致Win10启动项丢失，查了许久，该方法最有效:找一个U盘弄一个<code>电脑店U盘装机工具</code>(老毛桃啥的也行)进入Win10PE系统后，打开CMD命令行窗口，输入如下命令：<br><code>bcdboot ①:\Windows /s ②: /f uefi /l zh-cn</code>，其中①是你的Windows所在盘符，由于进了WinPE，盘符不一定是C，需要自己判别，②时你的EFI分区盘符，一般大小在100MB-300MB左右，如果找不到，可以使用<code>DiskGenius</code>工具可以指派盘符号。<code>/f uefi</code>是指定引导方式，<code>/l zh-cn</code>是设置中文语言。<br><img src="https://cdn.looyeagee.cn/blog/img/2019/11/2523712313.jpg-blog" alt="图1:执行命令图"><br>（图文参考自以下链接）<br><a href="https://blog.csdn.net/A_Sen_A/article/details/89545311" target="_blank" rel="noopener" title="win10 UEFI引导恢复">[参考链接①：win10 UEFI引导恢复]</a></p>]]></content>
      
      
      <categories>
          
          <category> 折腾 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> UEFI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初学SpringBoot遇到的坑和笔记</title>
      <link href="notes/SSM/"/>
      <url>notes/SSM/</url>
      
        <content type="html"><![CDATA[<h2 id="1-日期返回给前端显示不理想问题"><a href="#1-日期返回给前端显示不理想问题" class="headerlink" title="1.日期返回给前端显示不理想问题"></a>1.日期返回给前端显示不理想问题</h2><h3 id="1-1重现"><a href="#1-1重现" class="headerlink" title="1.1重现"></a>1.1重现</h3><p>不作配置返回的Date类型如下，格式不令人满意，时间也少了8个小时</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"Date"</span>: <span class="string">"2019-11-17T11:39:15.000+0000"</span>&#125;</span><br></pre></td></tr></table></figure><h3 id="1-2原因"><a href="#1-2原因" class="headerlink" title="1.2原因"></a>1.2原因</h3><p>没有对<code>jackson</code>进行时间格式配置<a id="more"></a></p><h3 id="1-3解决"><a href="#1-3解决" class="headerlink" title="1.3解决"></a>1.3解决</h3><p>在<code>application.properties</code>中加入对jackson的时区和Date类型格式化配置:</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">spring.jackson.time-zone</span>=<span class="string">GMT+8</span></span><br><span class="line"><span class="meta">spring.jackson.date-format</span>=<span class="string">yyyy-MM-dd HH:mm:ss</span></span><br></pre></td></tr></table></figure><h3 id="1-4结果"><a href="#1-4结果" class="headerlink" title="1.4结果"></a>1.4结果</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"Date"</span>: <span class="string">"2019-11-17 19:39:15"</span>&#125;</span><br></pre></td></tr></table></figure><h2 id="2-MyBatis-Plus数据库字段未找到问题"><a href="#2-MyBatis-Plus数据库字段未找到问题" class="headerlink" title="2.MyBatis-Plus数据库字段未找到问题"></a>2.MyBatis-Plus数据库字段未找到问题</h2><h3 id="2-1重现"><a href="#2-1重现" class="headerlink" title="2.1重现"></a>2.1重现</h3><p>运行就抛出<code>org.springframework.jdbc.BadSqlGrammarException:Error querying database. Cause: java.sql.SQLSyntaxErrorException: Unknown column &#39;user_name&#39; in &#39;field list&#39;</code>异常，实体类如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="meta">@TableId</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String userName;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-2原因"><a href="#2-2原因" class="headerlink" title="2.2原因"></a>2.2原因</h3><p><code>MyBatis-Plus</code>会自动将驼峰命名映射成含下划线的命名，如：<code>userName</code>会被转换成<code>user_name</code>，所以禁用这个即可。</p><h3 id="2-3解决"><a href="#2-3解决" class="headerlink" title="2.3解决"></a>2.3解决</h3><p>在<code>application.properties</code>中关闭映射即可：<br></p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mybatis-plus.configuration.map-underscore-to-camel-case</span>=<span class="string">false</span></span><br></pre></td></tr></table></figure><p></p><h2 id="3-Long型雪花主键返回给前端精度丢失问题"><a href="#3-Long型雪花主键返回给前端精度丢失问题" class="headerlink" title="3.Long型雪花主键返回给前端精度丢失问题"></a>3.Long型雪花主键返回给前端精度丢失问题</h2><h3 id="3-1重现"><a href="#3-1重现" class="headerlink" title="3.1重现"></a>3.1重现</h3><p>原本为1194942865416077314的雪花主键id返回给前端变成了：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123; <span class="attr">"id"</span>: <span class="number">1194942865416077300</span>&#125;</span><br></pre></td></tr></table></figure><h3 id="3-2原因"><a href="#3-2原因" class="headerlink" title="3.2原因"></a>3.2原因</h3><p>在Long长度大于17位时会出现精度丢失的问题（具体原因有待了解）</p><h3 id="3-3解决"><a href="#3-3解决" class="headerlink" title="3.3解决"></a>3.3解决</h3><p>在实体类上的雪花id加上注解<code>@JsonSerialize(using=ToStringSerializer.class)</code>，将长整数转换成字符串输出处理，如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="meta">@TableId</span></span><br><span class="line">    <span class="meta">@JsonSerialize</span>(using = ToStringSerializer<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">    <span class="title">private</span> <span class="title">Long</span> <span class="title">id</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-4结果"><a href="#3-4结果" class="headerlink" title="3.4结果"></a>3.4结果</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"id"</span>: <span class="string">"1194942865416077314"</span>&#125;</span><br></pre></td></tr></table></figure><h2 id="4-Maven依赖下载过慢"><a href="#4-Maven依赖下载过慢" class="headerlink" title="4.Maven依赖下载过慢"></a>4.Maven依赖下载过慢</h2><h3 id="4-1原因"><a href="#4-1原因" class="headerlink" title="4.1原因"></a>4.1原因</h3><p>第一次初始化SpringBoot的时候依赖总是下到一半就卡住，因为国外网站真的是太慢了8！🌚</p><h3 id="4-2解决"><a href="#4-2解决" class="headerlink" title="4.2解决"></a>4.2解决</h3><p>换成阿里源即可，在<code>~/.m2/settings.xml</code>文件内写入以下内容（~代表用户目录，Windows则是在<code>C:\Users\用户名\.m2\setting.xml</code>，如果不存在，则新建）：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">settings</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/SETTINGS/1.0.0"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/SETTINGS/1.0.0</span></span></span><br><span class="line"><span class="tag"><span class="string">                          https://maven.apache.org/xsd/settings-1.0.0.xsd"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">mirrors</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mirror</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>alimaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span>          </span><br><span class="line">        <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;/<span class="name">mirrors</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后在<code>IDEA</code>进行如下配置即可<br><img data-src="https://cdn.looyeagee.cn/blog/img/2019/11/2650084499.png-blog" alt="图1:IDEA Maven配置"></p><h2 id="5-实体对象某字段为空值返回给前端显示为null问题"><a href="#5-实体对象某字段为空值返回给前端显示为null问题" class="headerlink" title="5.实体对象某字段为空值返回给前端显示为null问题"></a>5.实体对象某字段为空值返回给前端显示为null问题</h2><h3 id="5-1重现"><a href="#5-1重现" class="headerlink" title="5.1重现"></a>5.1重现</h3><p>假如返回的实体对象的secret字段是null，返回给前端的效果如下，但我们不希望返回这个字段的内容</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"id"</span>: <span class="string">"1194942865416077314"</span>,<span class="attr">"secret"</span>: <span class="literal">null</span>&#125;</span><br></pre></td></tr></table></figure><h3 id="5-2原因"><a href="#5-2原因" class="headerlink" title="5.2原因"></a>5.2原因</h3><p>没有进行相关配置</p><h3 id="5-3解决"><a href="#5-3解决" class="headerlink" title="5.3解决"></a>5.3解决</h3><p>在相关的实体类前加上<code>@JsonInclude(JsonInclude.Include.NON_NULL)</code>注解即可，如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@JsonInclude</span>(JsonInclude.Include.NON_NULL)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="meta">@TableId</span></span><br><span class="line">    <span class="meta">@JsonSerialize</span>(using = ToStringSerializer<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">    <span class="title">private</span> <span class="title">Long</span> <span class="title">id</span></span>;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> String secret;</span><br></pre></td></tr></table></figure><h3 id="5-4结果"><a href="#5-4结果" class="headerlink" title="5.4结果"></a>5.4结果</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"id"</span>: <span class="string">"1194942865416077314"</span>&#125;</span><br></pre></td></tr></table></figure><h2 id="6-Swagger2中全局参数的配置"><a href="#6-Swagger2中全局参数的配置" class="headerlink" title="6.Swagger2中全局参数的配置"></a>6.Swagger2中全局参数的配置</h2><h3 id="6-1问题"><a href="#6-1问题" class="headerlink" title="6.1问题"></a>6.1问题</h3><p>token作为很多接口都要用到的headers参数，一个个添加太麻烦了。</p><h3 id="6-2解决"><a href="#6-2解决" class="headerlink" title="6.2解决"></a>6.2解决</h3><p>可以进行以下配置，让所有Swagger2中接口都带上token参数（import省略），但是将required设置为false，因为部分接口如登录注册不需要提交jwt头部参数：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableSwagger</span>2</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Swagger2Config</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Docket <span class="title">createRestApi</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        ParameterBuilder tokenPar = <span class="keyword">new</span> ParameterBuilder();</span><br><span class="line">        List&lt;Parameter&gt; pars = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        tokenPar</span><br><span class="line">                .name(<span class="string">"jwt"</span>)</span><br><span class="line">                .description(<span class="string">"令牌"</span>)</span><br><span class="line">                .modelRef(<span class="keyword">new</span> ModelRef(<span class="string">"string"</span>))</span><br><span class="line">                .parameterType(<span class="string">"header"</span>)</span><br><span class="line">                .required(<span class="keyword">false</span>)</span><br><span class="line">                .defaultValue(<span class="string">"默认值，可以写入以方便前端测试"</span>)</span><br><span class="line">                .build();</span><br><span class="line">        pars.add(tokenPar.build());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Docket(DocumentationType.SWAGGER_2)</span><br><span class="line">                .globalOperationParameters(pars)<span class="comment">//全局jwt参数</span></span><br><span class="line">                .apiInfo(apiInfo())</span><br><span class="line">                .select()</span><br><span class="line">                .apis(RequestHandlerSelectors.basePackage(<span class="string">"com.looyeagee.clbb"</span>))</span><br><span class="line">                .paths(PathSelectors.any()).build().pathMapping(<span class="string">"/"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> ApiInfo <span class="title">apiInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ApiInfoBuilder()</span><br><span class="line">                .title(<span class="string">"长理帮帮restful API"</span>)</span><br><span class="line">                .description(<span class="string">"by looyeagee"</span>)</span><br><span class="line">                .termsOfServiceUrl(<span class="string">"https://looyeagee.cn"</span>)</span><br><span class="line">                .version(<span class="string">"1.0"</span>)</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-3结果"><a href="#6-3结果" class="headerlink" title="6.3结果"></a>6.3结果</h3><p><img data-src="https://cdn.looyeagee.cn/blog/img/2019/11/1336844513.png-blog" alt="图2:全局JWT头"></p><h2 id="7-实体作为参数，但参数列表过长在Swagger2中需隐藏部分参数的问题"><a href="#7-实体作为参数，但参数列表过长在Swagger2中需隐藏部分参数的问题" class="headerlink" title="7.实体作为参数，但参数列表过长在Swagger2中需隐藏部分参数的问题"></a>7.实体作为参数，但参数列表过长在Swagger2中需隐藏部分参数的问题</h2><h3 id="7-1问题"><a href="#7-1问题" class="headerlink" title="7.1问题"></a>7.1问题</h3><p>注册接口和登录接口都要用到这个如下实体类，但是Swagger2不好怎么配置使登录接口只展示2个参数。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@JsonInclude</span>(JsonInclude.Include.NON_NULL)</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">LoginGroup</span> </span>&#123;&#125;<span class="comment">//登录分组校验</span></span><br><span class="line">    <span class="meta">@TableId</span></span><br><span class="line">    <span class="meta">@JsonSerialize</span>(using = ToStringSerializer<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">    @<span class="title">ApiModelProperty</span>(<span class="title">value</span> </span>= <span class="string">"用户id"</span>, hidden = <span class="keyword">true</span>)</span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"用户名"</span>, required = <span class="keyword">true</span>)</span><br><span class="line">    <span class="meta">@NotBlank</span>(message = <span class="string">"用户名不能为空"</span>,groups = &#123;LoginGroup<span class="class">.<span class="keyword">class</span>, <span class="title">Default</span>.<span class="title">class</span>&#125;)</span></span><br><span class="line"><span class="class">    @<span class="title">Size</span>(<span class="title">min</span> </span>= <span class="number">5</span>, max = <span class="number">16</span>, message = <span class="string">"用户名长度必须为5-16个字符"</span>)</span><br><span class="line">    <span class="keyword">private</span> String userName;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NotBlank</span>(message = <span class="string">"密码不能为空"</span>,groups = &#123;LoginGroup<span class="class">.<span class="keyword">class</span>, <span class="title">Default</span>.<span class="title">class</span>&#125;)</span></span><br><span class="line"><span class="class">    @<span class="title">Pattern</span>(<span class="title">regexp</span> </span>= <span class="string">"^(?=.*[0-9])(?=.*[a-zA-Z])(?=.*[!@#$_&amp;*+-])[0-9a-zA-Z!@#$_&amp;*+-]&#123;6,16&#125;$"</span>, message = <span class="string">"用户密码需要至少包含一个数字，一个字母，一个特殊字符且长度在6~16之间"</span>)</span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"用户密码"</span>, required = <span class="keyword">true</span>)</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NotBlank</span>(message = <span class="string">"手机不能为空"</span>)</span><br><span class="line">    <span class="meta">@Pattern</span>(regexp = <span class="string">"^1[3456789]\\d&#123;9&#125;$"</span>,message = <span class="string">"输入的手机号码不符合规范"</span>)</span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"手机号码"</span>, required = <span class="keyword">true</span>)</span><br><span class="line">    <span class="keyword">private</span> String phoneNumber;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*还有好多好多好多字段不一一展示*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-2解决"><a href="#7-2解决" class="headerlink" title="7.2解决"></a>7.2解决</h3><p>现在注册接口和登录接口都要用到这个实体类，考虑到注册接口参数多一些所以直接在上述类中写好Swagger2中的配置，但是登录接口只要实体类中的用户名和密码这两个参数，所以不应该展示过多的参数，这时应该这样做，将登录、注册接口如下定义（import省略），Swagger2用<code>@ApiIgnore</code>注解忽略登录接口中的User参数，然后手动用<code>@ApiImplicitParams</code>和<code>@ApiImplicitParam</code>注解配置参数信息，具体参考下方代码。此外，SpringBoot还是得进行用户名和密码不能为null或空的参数检验，这时候为了区分注册接口要用的校验，就得使用到分组检验（可参考上面的实体类定义的检验注解，先定义一个分组接口，然后在需要校验的注解上加上<code>groups = {LoginGroup.class, Default.class}</code>这个参数即可，其中LoginGroup为分组接口名，然后再在控制类参数前加上<code>@Validated(value = User.LoginGroup.class)</code>注解即可）：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Validated</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"/user"</span>)</span><br><span class="line"><span class="meta">@Api</span>(description = <span class="string">"用户登录注册查询"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    UserServiceImpl userService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiOperation</span>(value = <span class="string">"登录"</span>, notes = <span class="string">"填写以下需要的"</span>)</span><br><span class="line">    <span class="meta">@ApiImplicitParams</span>(&#123;</span><br><span class="line">            <span class="meta">@ApiImplicitParam</span>(paramType = <span class="string">"query"</span>, name = <span class="string">"userName"</span>, value = <span class="string">"用户名"</span>, dataType = <span class="string">"String"</span>, example = <span class="string">"ohuo"</span>, required = <span class="keyword">true</span>),</span><br><span class="line">            <span class="meta">@ApiImplicitParam</span>(paramType = <span class="string">"query"</span>, name = <span class="string">"password"</span>, value = <span class="string">"密码"</span>, dataType = <span class="string">"String"</span>, example = <span class="string">"666"</span>, required = <span class="keyword">true</span>)&#125;</span><br><span class="line">    )</span><br><span class="line">    <span class="meta">@PostMapping</span>(value = <span class="string">"/login"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ResultModel <span class="title">login</span><span class="params">(@ApiIgnore @Validated(value = User.LoginGroup.class)</span> User user) </span>&#123;</span><br><span class="line">        User loginUser = userService.login(user);</span><br><span class="line">        <span class="keyword">if</span> (loginUser == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> ResultFailure(<span class="string">"登录失败，请检查帐号密码是否错误"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> ResultSuccess(<span class="string">"登录成功，欢迎您"</span> + loginUser.getUserName(), userService.createJWTResultMap(loginUser));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiOperation</span>(value = <span class="string">"注册"</span>, notes = <span class="string">"填写以下需要的"</span>)</span><br><span class="line">    <span class="meta">@PostMapping</span>(value = <span class="string">"/reg"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ResultModel <span class="title">reg</span><span class="params">(@Validated User user)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (userService.addUser(user)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> ResultSuccess(<span class="string">"注册成功"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> ResultFailure(<span class="string">"存在重复用户名或手机号码！"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-3结果"><a href="#7-3结果" class="headerlink" title="7.3结果"></a>7.3结果</h3><p>登录：<br><img data-src="https://cdn.looyeagee.cn/blog/img/2019/11/2434689805.png-blog" alt="图3:登录"></p><p><img data-src="https://cdn.looyeagee.cn/blog/img/2019/11/3630114303.png-blog" alt="图4:注册"></p><h2 id="8-参数为Date，前端不知道传啥格式"><a href="#8-参数为Date，前端不知道传啥格式" class="headerlink" title="8.参数为Date，前端不知道传啥格式"></a>8.参数为Date，前端不知道传啥格式</h2><h3 id="8-1重现"><a href="#8-1重现" class="headerlink" title="8.1重现"></a>8.1重现</h3><p>传日期进去不正确就会抛出<code>java.lang.IllegalArgumentException</code>异常</p><h3 id="8-2解决"><a href="#8-2解决" class="headerlink" title="8.2解决"></a>8.2解决</h3><p>按如下格式传入即可（0可以不补）<br><code>2019/11/17 23:05:55</code></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
            <tag> SpringMVC </tag>
            
            <tag> Mybatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[开源]一键登录厂里作业宝（嘘～）</title>
      <link href="software/zuoyebao/"/>
      <url>software/zuoyebao/</url>
      
        <content type="html"><![CDATA[<p>大家都发现学宝虚拟机里的作业宝能一键登录吧，我稍稍研究了一下，其实就是读取注册表中的计算机名的值再去和服务器匹配，如果匹配成功就登录。以下是C#源码，随便新建一个窗体程序，在窗体载入函数中写下如下代码即可（条件：作业宝在<code>D:\作业宝</code>目录下，程序所在目录有配置文件<code>config.ini</code>，其中<code>xb</code>的内容就是学宝虚拟机的计算机名。但是不要恶意登录他人的！还有～本程序得以管理员身份运行，因为修改了要权限的注册表。<a id="more"></a>[首创]）<br>配置文件：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">[csust]</span></span><br><span class="line"><span class="attr">xb</span>=<span class="string">grade******</span></span><br></pre></td></tr></table></figure><p>源代码：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainFormLoad</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">GetPrivateProfileString(<span class="string">"csust"</span>, <span class="string">"xb"</span>, <span class="string">""</span>, sb, <span class="number">255</span>, Environment.CurrentDirectory+<span class="string">"\\config.ini"</span>);<span class="comment">//取得学宝计算机名并放入sb变量</span></span><br><span class="line">RegistryKey rkLocalMachine = Registry.LocalMachine;</span><br><span class="line">RegistryKey rkChild = rkLocalMachine.OpenSubKey(<span class="string">@"SYSTEM\CurrentControlSet\Services\Tcpip\Parameters"</span>, <span class="literal">true</span>);</span><br><span class="line"><span class="keyword">this</span>.Text=rkChild.GetValue(<span class="string">"Hostname"</span>).ToString();<span class="comment">//取得自己计算机名将其存入标题</span></span><br><span class="line">rkChild.SetValue(<span class="string">"Hostname"</span>,sb.ToString());<span class="comment">//将sb变量中的学宝计算机名写到注册表</span></span><br><span class="line">System.Diagnostics.Process.Start(<span class="string">@"D:\作业宝\RealWork.exe"</span>);<span class="comment">//运行作业宝</span></span><br><span class="line">Thread.Sleep(<span class="number">3000</span>);<span class="comment">//休眠3s 可根据电脑配置酌情加减</span></span><br><span class="line">rkChild.SetValue(<span class="string">"Hostname"</span>,<span class="keyword">this</span>.Text);<span class="comment">//还原计算机名</span></span><br><span class="line">Environment.Exit(<span class="number">0</span>);<span class="comment">//退出</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 原创软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 作业宝 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记一次下雪</title>
      <link href="stories/snow2018/"/>
      <url>stories/snow2018/</url>
      
        <content type="html"><![CDATA[<p>长沙好几年没下雪了，即使拍照再蹩脚也要拍一下做个纪念。</p><p><img data-src="https://cdn.looyeagee.cn/blog/img/2019/11/623190771.jpg-blog" alt="图1:树上的雪"></p><p><img data-src="https://cdn.looyeagee.cn/blog/img/2019/11/2654584279.jpg-blog" alt="图2:操场的雪"></p>]]></content>
      
      
      <categories>
          
          <category> 碎语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 下雪 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记转专业成功</title>
      <link href="stories/zhuanzhuanye/"/>
      <url>stories/zhuanzhuanye/</url>
      
        <content type="html"><![CDATA[<p>几天前，向计算机学院递交了一份转专业申请表，心里很是忐忑，知道自己成绩不是很好，不知道自己能不能成功。然而，我的运气还是不错的，成功转入了计算机学院。要告别这一年的同学确实还是不舍，面对新环境不知道自己能不能适应得过来…不管那么多了，毕竟自己当初报的第一专业是软件工程，我是被调剂到化工类的，说实话找到自己喜欢的专业去学习是一件十分幸福的事情。</p>]]></content>
      
      
      <categories>
          
          <category> 碎语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 转专业 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>QQ坦白说分析软件</title>
      <link href="software/tanbaishuo/"/>
      <url>software/tanbaishuo/</url>
      
        <content type="html"><![CDATA[<blockquote><p>注：该软件已经失效。</p></blockquote><p>原理：手机与电脑处在同一局域网，通过用抓包工具<code>Fiddler</code>创建代理服务器，手机配置好后，手机访问网站所获取的数据即可被电脑端读取，从而进一步分析。<a id="more"></a></p><p>json数据的QQ是加密的，解密方法由<a href="https://jackz.cn/article/how_to_honestsay" target="_blank" rel="noopener">jackz</a>用时90分钟左右率先发现：三位循环查表法。</p><p>比如某QQ是*S1*7iEFNK4ioe4A</p><p>其中*S1*是每个QQ都有的前缀，删除后就是7iEFNK4ioe4A</p><p>采用这样的方式解密 2 1 1 2 1 1 2 1 1 2的循环</p><p>就是说第一二个字符对应第一位QQ号码 第三个字符对应第二位号码 第四个对应第三个号码 第五六个对应第四个号码……</p><p>例如</p><p>7i E F NK 4 i oe 4 A</p><p>对应</p><p>7 9 8 9 5 3 0 5 2</p><p>通过足够的样本，即可获得密码表</p><p>然后，我就按照jackz提供的密码表（第10位密码原作者无充分样本尚未提供，我通过大量样本得出了第10位密码表）写了如下软件</p><p><img data-src="https://cdn.looyeagee.cn/blog/img/2018/04/617956581.png" alt="图1:软件解析截图"></p><p>具体操作方法是，下载打开抓包软件<code>Fiddler Web Debugger</code>，在<code>选项</code>-<code>HTTPS</code>启用捕获<code>HTTPS连接</code>和<code>解密HTTPS通信</code>，在<code>选项</code>-<code>连接</code>中输入监听端口，例如<code>8888</code>然后按<code>确定</code>。然后导入其证书并进行信任；电脑开启热点让手机连接后，配置WiFi的代理地址为电脑的Ipv4地址，端口就是自己设置的代理端口。然后打开QQ坦白说，分析<code>ti.qq.com</code>的<code>json包</code>即可。</p>]]></content>
      
      
      <categories>
          
          <category> 原创软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 坦白说 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
